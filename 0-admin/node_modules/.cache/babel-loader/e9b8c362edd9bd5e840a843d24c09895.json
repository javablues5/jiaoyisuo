{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\src\\utils\\ruoyi.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\src\\utils\\ruoyi.js","mtime":1698845798000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\babel.config.js","mtime":1698845798000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0FkbWluaXN0cmF0b3IvRGVza3RvcC9cdTRFQTRcdTY2MTNcdTYyNDA5LjI3LzAtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIuanMiOwppbXBvcnQgX3R5cGVvZiBmcm9tICJDOi9Vc2Vycy9BZG1pbmlzdHJhdG9yL0Rlc2t0b3AvXHU0RUE0XHU2NjEzXHU2MjQwOS4yNy8wLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZG90LWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5zdGlja3kuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovKioNCiAqIOmAmueUqGpz5pa55rOV5bCB6KOF5aSE55CGDQogKi8KCi8vIOaXpeacn+agvOW8j+WMlgpleHBvcnQgZnVuY3Rpb24gcGFyc2VUaW1lKHRpbWUsIHBhdHRlcm4pIHsKICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCB8fCAhdGltZSkgewogICAgcmV0dXJuIG51bGw7CiAgfQogIHZhciBmb3JtYXQgPSBwYXR0ZXJuIHx8ICJ7eX0te219LXtkfSB7aH06e2l9OntzfSI7CiAgdmFyIGRhdGU7CiAgaWYgKF90eXBlb2YodGltZSkgPT09ICJvYmplY3QiKSB7CiAgICBkYXRlID0gdGltZTsKICB9IGVsc2UgewogICAgaWYgKHR5cGVvZiB0aW1lID09PSAic3RyaW5nIiAmJiAvXlswLTldKyQvLnRlc3QodGltZSkpIHsKICAgICAgdGltZSA9IHBhcnNlSW50KHRpbWUpOwogICAgfSBlbHNlIGlmICh0eXBlb2YgdGltZSA9PT0gInN0cmluZyIpIHsKICAgICAgdGltZSA9IHRpbWUucmVwbGFjZShuZXcgUmVnRXhwKC8tL2dtKSwgIi8iKS5yZXBsYWNlKCJUIiwgIiAiKS5yZXBsYWNlKG5ldyBSZWdFeHAoL1wuW1xkXXszfS9nbSksICIiKTsKICAgIH0KICAgIGlmICh0eXBlb2YgdGltZSA9PT0gIm51bWJlciIgJiYgdGltZS50b1N0cmluZygpLmxlbmd0aCA9PT0gMTApIHsKICAgICAgdGltZSA9IHRpbWUgKiAxMDAwOwogICAgfQogICAgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpOwogIH0KICB2YXIgZm9ybWF0T2JqID0gewogICAgeTogZGF0ZS5nZXRGdWxsWWVhcigpLAogICAgbTogZGF0ZS5nZXRNb250aCgpICsgMSwKICAgIGQ6IGRhdGUuZ2V0RGF0ZSgpLAogICAgaDogZGF0ZS5nZXRIb3VycygpLAogICAgaTogZGF0ZS5nZXRNaW51dGVzKCksCiAgICBzOiBkYXRlLmdldFNlY29uZHMoKSwKICAgIGE6IGRhdGUuZ2V0RGF5KCkKICB9OwogIHZhciB0aW1lX3N0ciA9IGZvcm1hdC5yZXBsYWNlKC97KHl8bXxkfGh8aXxzfGEpK30vZywgZnVuY3Rpb24gKHJlc3VsdCwga2V5KSB7CiAgICB2YXIgdmFsdWUgPSBmb3JtYXRPYmpba2V5XTsKICAgIC8vIE5vdGU6IGdldERheSgpIHJldHVybnMgMCBvbiBTdW5kYXkKICAgIGlmIChrZXkgPT09ICJhIikgewogICAgICByZXR1cm4gWyLml6UiLCAi5LiAIiwgIuS6jCIsICLkuIkiLCAi5ZubIiwgIuS6lCIsICLlha0iXVt2YWx1ZV07CiAgICB9CiAgICBpZiAocmVzdWx0Lmxlbmd0aCA+IDAgJiYgdmFsdWUgPCAxMCkgewogICAgICB2YWx1ZSA9ICIwIiArIHZhbHVlOwogICAgfQogICAgcmV0dXJuIHZhbHVlIHx8IDA7CiAgfSk7CiAgcmV0dXJuIHRpbWVfc3RyOwp9CgovLyDooajljZXph43nva4KZXhwb3J0IGZ1bmN0aW9uIHJlc2V0Rm9ybShyZWZOYW1lKSB7CiAgaWYgKHRoaXMuJHJlZnNbcmVmTmFtZV0pIHsKICAgIHRoaXMuJHJlZnNbcmVmTmFtZV0ucmVzZXRGaWVsZHMoKTsKICB9Cn0KCi8vIOa3u+WKoOaXpeacn+iMg+WbtApleHBvcnQgZnVuY3Rpb24gYWRkRGF0ZVJhbmdlKHBhcmFtcywgZGF0ZVJhbmdlLCBwcm9wTmFtZSkgewogIHZhciBzZWFyY2ggPSBwYXJhbXM7CiAgc2VhcmNoLnBhcmFtcyA9IF90eXBlb2Yoc2VhcmNoLnBhcmFtcykgPT09ICJvYmplY3QiICYmIHNlYXJjaC5wYXJhbXMgIT09IG51bGwgJiYgIUFycmF5LmlzQXJyYXkoc2VhcmNoLnBhcmFtcykgPyBzZWFyY2gucGFyYW1zIDoge307CiAgZGF0ZVJhbmdlID0gQXJyYXkuaXNBcnJheShkYXRlUmFuZ2UpID8gZGF0ZVJhbmdlIDogW107CiAgaWYgKHR5cGVvZiBwcm9wTmFtZSA9PT0gInVuZGVmaW5lZCIpIHsKICAgIHNlYXJjaC5wYXJhbXNbImJlZ2luVGltZSJdID0gZGF0ZVJhbmdlWzBdOwogICAgc2VhcmNoLnBhcmFtc1siZW5kVGltZSJdID0gZGF0ZVJhbmdlWzFdOwogIH0gZWxzZSB7CiAgICBzZWFyY2gucGFyYW1zWyJiZWdpbiIgKyBwcm9wTmFtZV0gPSBkYXRlUmFuZ2VbMF07CiAgICBzZWFyY2gucGFyYW1zWyJlbmQiICsgcHJvcE5hbWVdID0gZGF0ZVJhbmdlWzFdOwogIH0KICByZXR1cm4gc2VhcmNoOwp9CgovLyDlm57mmL7mlbDmja7lrZflhbgKZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdERpY3RMYWJlbChkYXRhcywgdmFsdWUpIHsKICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgewogICAgcmV0dXJuICIiOwogIH0KICB2YXIgYWN0aW9ucyA9IFtdOwogIE9iamVjdC5rZXlzKGRhdGFzKS5zb21lKGZ1bmN0aW9uIChrZXkpIHsKICAgIGlmIChkYXRhc1trZXldLnZhbHVlID09ICIiICsgdmFsdWUpIHsKICAgICAgYWN0aW9ucy5wdXNoKGRhdGFzW2tleV0ubGFiZWwpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9KTsKICBpZiAoYWN0aW9ucy5sZW5ndGggPT09IDApIHsKICAgIGFjdGlvbnMucHVzaCh2YWx1ZSk7CiAgfQogIHJldHVybiBhY3Rpb25zLmpvaW4oIiIpOwp9CgovLyDlm57mmL7mlbDmja7lrZflhbjvvIjlrZfnrKbkuLLjgIHmlbDnu4TvvIkKZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdERpY3RMYWJlbHMoZGF0YXMsIHZhbHVlLCBzZXBhcmF0b3IpIHsKICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZS5sZW5ndGggPT09IDApIHsKICAgIHJldHVybiAiIjsKICB9CiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7CiAgICB2YWx1ZSA9IHZhbHVlLmpvaW4oIiwiKTsKICB9CiAgdmFyIGFjdGlvbnMgPSBbXTsKICB2YXIgY3VycmVudFNlcGFyYXRvciA9IHVuZGVmaW5lZCA9PT0gc2VwYXJhdG9yID8gIiwiIDogc2VwYXJhdG9yOwogIHZhciB0ZW1wID0gdmFsdWUuc3BsaXQoY3VycmVudFNlcGFyYXRvcik7CiAgT2JqZWN0LmtleXModmFsdWUuc3BsaXQoY3VycmVudFNlcGFyYXRvcikpLnNvbWUoZnVuY3Rpb24gKHZhbCkgewogICAgdmFyIG1hdGNoID0gZmFsc2U7CiAgICBPYmplY3Qua2V5cyhkYXRhcykuc29tZShmdW5jdGlvbiAoa2V5KSB7CiAgICAgIGlmIChkYXRhc1trZXldLnZhbHVlID09ICIiICsgdGVtcFt2YWxdKSB7CiAgICAgICAgYWN0aW9ucy5wdXNoKGRhdGFzW2tleV0ubGFiZWwgKyBjdXJyZW50U2VwYXJhdG9yKTsKICAgICAgICBtYXRjaCA9IHRydWU7CiAgICAgIH0KICAgIH0pOwogICAgaWYgKCFtYXRjaCkgewogICAgICBhY3Rpb25zLnB1c2godGVtcFt2YWxdICsgY3VycmVudFNlcGFyYXRvcik7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGFjdGlvbnMuam9pbigiIikuc3Vic3RyaW5nKDAsIGFjdGlvbnMuam9pbigiIikubGVuZ3RoIC0gMSk7Cn0KCi8vIOWtl+espuS4suagvOW8j+WMliglcyApCmV4cG9ydCBmdW5jdGlvbiBzcHJpbnRmKHN0cikgewogIHZhciBhcmdzID0gYXJndW1lbnRzLAogICAgZmxhZyA9IHRydWUsCiAgICBpID0gMTsKICBzdHIgPSBzdHIucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkgewogICAgdmFyIGFyZyA9IGFyZ3NbaSsrXTsKICAgIGlmICh0eXBlb2YgYXJnID09PSAidW5kZWZpbmVkIikgewogICAgICBmbGFnID0gZmFsc2U7CiAgICAgIHJldHVybiAiIjsKICAgIH0KICAgIHJldHVybiBhcmc7CiAgfSk7CiAgcmV0dXJuIGZsYWcgPyBzdHIgOiAiIjsKfQoKLy8g6L2s5o2i5a2X56ym5Liy77yMdW5kZWZpbmVkLG51bGznrYnovazljJbkuLoiIgpleHBvcnQgZnVuY3Rpb24gcGFyc2VTdHJFbXB0eShzdHIpIHsKICBpZiAoIXN0ciB8fCBzdHIgPT0gInVuZGVmaW5lZCIgfHwgc3RyID09ICJudWxsIikgewogICAgcmV0dXJuICIiOwogIH0KICByZXR1cm4gc3RyOwp9CgovLyDmlbDmja7lkIjlubYKZXhwb3J0IGZ1bmN0aW9uIG1lcmdlUmVjdXJzaXZlKHNvdXJjZSwgdGFyZ2V0KSB7CiAgZm9yICh2YXIgcCBpbiB0YXJnZXQpIHsKICAgIHRyeSB7CiAgICAgIGlmICh0YXJnZXRbcF0uY29uc3RydWN0b3IgPT0gT2JqZWN0KSB7CiAgICAgICAgc291cmNlW3BdID0gbWVyZ2VSZWN1cnNpdmUoc291cmNlW3BdLCB0YXJnZXRbcF0pOwogICAgICB9IGVsc2UgewogICAgICAgIHNvdXJjZVtwXSA9IHRhcmdldFtwXTsKICAgICAgfQogICAgfSBjYXRjaCAoZSkgewogICAgICBzb3VyY2VbcF0gPSB0YXJnZXRbcF07CiAgICB9CiAgfQogIHJldHVybiBzb3VyY2U7Cn0KCi8qKg0KICog5p6E6YCg5qCR5Z6L57uT5p6E5pWw5o2uDQogKiBAcGFyYW0geyp9IGRhdGEg5pWw5o2u5rqQDQogKiBAcGFyYW0geyp9IGlkIGlk5a2X5q61IOm7mOiupCAnaWQnDQogKiBAcGFyYW0geyp9IHBhcmVudElkIOeItuiKgueCueWtl+autSDpu5jorqQgJ3BhcmVudElkJw0KICogQHBhcmFtIHsqfSBjaGlsZHJlbiDlranlrZDoioLngrnlrZfmrrUg6buY6K6kICdjaGlsZHJlbicNCiAqLwpleHBvcnQgZnVuY3Rpb24gaGFuZGxlVHJlZShkYXRhLCBpZCwgcGFyZW50SWQsIGNoaWxkcmVuKSB7CiAgdmFyIGNvbmZpZyA9IHsKICAgIGlkOiBpZCB8fCAiaWQiLAogICAgcGFyZW50SWQ6IHBhcmVudElkIHx8ICJwYXJlbnRJZCIsCiAgICBjaGlsZHJlbkxpc3Q6IGNoaWxkcmVuIHx8ICJjaGlsZHJlbiIKICB9OwogIHZhciBjaGlsZHJlbkxpc3RNYXAgPSB7fTsKICB2YXIgbm9kZUlkcyA9IHt9OwogIHZhciB0cmVlID0gW107CiAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRhdGEpLAogICAgX3N0ZXA7CiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciBkID0gX3N0ZXAudmFsdWU7CiAgICAgIHZhciBfcGFyZW50SWQgPSBkW2NvbmZpZy5wYXJlbnRJZF07CiAgICAgIGlmIChjaGlsZHJlbkxpc3RNYXBbX3BhcmVudElkXSA9PSBudWxsKSB7CiAgICAgICAgY2hpbGRyZW5MaXN0TWFwW19wYXJlbnRJZF0gPSBbXTsKICAgICAgfQogICAgICBub2RlSWRzW2RbY29uZmlnLmlkXV0gPSBkOwogICAgICBjaGlsZHJlbkxpc3RNYXBbX3BhcmVudElkXS5wdXNoKGQpOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2l0ZXJhdG9yLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yLmYoKTsKICB9CiAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihkYXRhKSwKICAgIF9zdGVwMjsKICB0cnkgewogICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgdmFyIF9kID0gX3N0ZXAyLnZhbHVlOwogICAgICB2YXIgX3BhcmVudElkMiA9IF9kW2NvbmZpZy5wYXJlbnRJZF07CiAgICAgIGlmIChub2RlSWRzW19wYXJlbnRJZDJdID09IG51bGwpIHsKICAgICAgICB0cmVlLnB1c2goX2QpOwogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yMi5mKCk7CiAgfQogIGZvciAodmFyIF9pID0gMCwgX3RyZWUgPSB0cmVlOyBfaSA8IF90cmVlLmxlbmd0aDsgX2krKykgewogICAgdmFyIHQgPSBfdHJlZVtfaV07CiAgICBhZGFwdFRvQ2hpbGRyZW5MaXN0KHQpOwogIH0KICBmdW5jdGlvbiBhZGFwdFRvQ2hpbGRyZW5MaXN0KG8pIHsKICAgIGlmIChjaGlsZHJlbkxpc3RNYXBbb1tjb25maWcuaWRdXSAhPT0gbnVsbCkgewogICAgICBvW2NvbmZpZy5jaGlsZHJlbkxpc3RdID0gY2hpbGRyZW5MaXN0TWFwW29bY29uZmlnLmlkXV07CiAgICB9CiAgICBpZiAob1tjb25maWcuY2hpbGRyZW5MaXN0XSkgewogICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG9bY29uZmlnLmNoaWxkcmVuTGlzdF0pLAogICAgICAgIF9zdGVwMzsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGMgPSBfc3RlcDMudmFsdWU7CiAgICAgICAgICBhZGFwdFRvQ2hpbGRyZW5MaXN0KGMpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIHRyZWU7Cn0KCi8qKg0KICog5Y+C5pWw5aSE55CGDQogKiBAcGFyYW0geyp9IHBhcmFtcyAg5Y+C5pWwDQogKi8KZXhwb3J0IGZ1bmN0aW9uIHRhbnNQYXJhbXMocGFyYW1zKSB7CiAgdmFyIHJlc3VsdCA9ICIiOwogIGZvciAodmFyIF9pMiA9IDAsIF9PYmplY3Qka2V5cyA9IE9iamVjdC5rZXlzKHBhcmFtcyk7IF9pMiA8IF9PYmplY3Qka2V5cy5sZW5ndGg7IF9pMisrKSB7CiAgICB2YXIgcHJvcE5hbWUgPSBfT2JqZWN0JGtleXNbX2kyXTsKICAgIHZhciB2YWx1ZSA9IHBhcmFtc1twcm9wTmFtZV07CiAgICB2YXIgcGFydCA9IGVuY29kZVVSSUNvbXBvbmVudChwcm9wTmFtZSkgKyAiPSI7CiAgICBpZiAodmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09ICIiICYmIHR5cGVvZiB2YWx1ZSAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgaWYgKF90eXBlb2YodmFsdWUpID09PSAib2JqZWN0IikgewogICAgICAgIGZvciAodmFyIF9pMyA9IDAsIF9PYmplY3Qka2V5czIgPSBPYmplY3Qua2V5cyh2YWx1ZSk7IF9pMyA8IF9PYmplY3Qka2V5czIubGVuZ3RoOyBfaTMrKykgewogICAgICAgICAgdmFyIGtleSA9IF9PYmplY3Qka2V5czJbX2kzXTsKICAgICAgICAgIGlmICh2YWx1ZVtrZXldICE9PSBudWxsICYmIHZhbHVlW2tleV0gIT09ICIiICYmIHR5cGVvZiB2YWx1ZVtrZXldICE9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgICB2YXIgX3BhcmFtcyA9IHByb3BOYW1lICsgIlsiICsga2V5ICsgIl0iOwogICAgICAgICAgICB2YXIgc3ViUGFydCA9IGVuY29kZVVSSUNvbXBvbmVudChfcGFyYW1zKSArICI9IjsKICAgICAgICAgICAgcmVzdWx0ICs9IHN1YlBhcnQgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWVba2V5XSkgKyAiJiI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdCArPSBwYXJ0ICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSArICImIjsKICAgICAgfQogICAgfQogIH0KICByZXR1cm4gcmVzdWx0Owp9CgovLyDpqozor4HmmK/lkKbkuLpibG9i5qC85byPCmV4cG9ydCBmdW5jdGlvbiBibG9iVmFsaWRhdGUoZGF0YSkgewogIHJldHVybiBkYXRhLnR5cGUgIT09ICJhcHBsaWNhdGlvbi9qc29uIjsKfQ=="},null]}