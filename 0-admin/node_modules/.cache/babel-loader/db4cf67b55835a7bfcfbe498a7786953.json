{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\src\\views\\newCoin\\IssueCoins\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\src\\views\\newCoin\\IssueCoins\\index.vue","mtime":1698845798000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\babel.config.js","mtime":1698845798000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\交易所9.27\\0-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL1x1NEVBNFx1NjYxM1x1NjI0MDkuMjcvMC1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRlc3QuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5lcnJvci5jYXVzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0IHsgbGlzdENvaW4sIGdldENvaW4sIGRlbENvaW4sIGFkZENvaW4sIHVwZGF0ZUNvaW4sIHB1Ymxpc2hDb2luQXBpLCBwdWJsaXNoZWRDb2luQXBpIH0gZnJvbSAiQC9hcGkvYnVzc2luZXNzL0lzc3VlQ29pbnMiOwppbXBvcnQgeyBnZXRTZWxlY3RMaXN0IGFzIF9nZXRTZWxlY3RMaXN0IH0gZnJvbSAiQC9hcGkvc3lzdGVtL3R5cGUiOwppbXBvcnQgeyBfbXVsLCBfZGl2LCBfdG9GaXhlZCwgX1NOMkQsIF9hZGQgfSBmcm9tICIuLi8uLi9idXNzaW5lc3MvdHJhZGUtcm9ib3QvZGVjaW1hbCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ29pbiIsCiAgZGljdHM6IFsiaXNzdWVfY29pbnNfc3RhdHVzIl0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICB2YXIgcGVyY2VudCA9IGZ1bmN0aW9uIHBlcmNlbnQocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh2YWx1ZSkgewogICAgICAgIGlmICghL14oKD86MHxbMS05XVswLTldP3wxMDApfCgoWzBdXC5cZHsxLDR9fFsxLTldWzAtOV0qXC5cZHsxLDR9KSkpJC8udGVzdCh2YWx1ZSkpIHsKICAgICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoIuaUr+aMgTDliLAxMDAs5bCP5pWw5Zub5L2NIikpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwogICAgdmFyIGNvbXBhcmVNaW4gPSBmdW5jdGlvbiBjb21wYXJlTWluKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAodmFsdWUpIHsKICAgICAgICBpZiAoTnVtYmVyKHZhbHVlKSA+PSBOdW1iZXIoX3RoaXMuZm9ybS5yYWlzaW5nQW1vdW50KSkgewogICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcigi5bey56256ZuG6aKd5bqm5LiN5aSn5LqO56eB5Yuf5Y+R6KGM6YePIikpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwogICAgdmFyIG1vbmV5U2hvdyA9IGZ1bmN0aW9uIG1vbmV5U2hvdyhydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgaWYgKE51bWJlcih2YWx1ZSkgPT0gMCkgewogICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcigi5Lu35qC85LiN6IO95Li6MCIpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKICAgIHZhciB0aW1lZXIgPSBmdW5jdGlvbiB0aW1lZXIocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIHZhciBkYXRlMSA9IG5ldyBEYXRlKF90aGlzLmZvcm0uYmVnaW5UaW1lKS5nZXRUaW1lKCk7CiAgICAgIHZhciBkYXRlMiA9IG5ldyBEYXRlKF90aGlzLmZvcm0uZW5kVGltZSkuZ2V0VGltZSgpOwogICAgICBpZiAodmFsdWUpIHsKICAgICAgICBpZiAoZGF0ZTIgPCBkYXRlMSkgewogICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcigi57uT5p2f5pe26Ze06ZyA5aSn5LqO5byA5aeL5pe26Ze0IikpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwogICAgcmV0dXJuIHsKICAgICAgbWV0YTogdHJ1ZSwKICAgICAgLyoqDQogICAgICAgKiDooajljZUNCiAgICAgICAqLwogICAgICBzbGlkZXJGb3JtOiB7CiAgICAgICAgcHJpY2U6ICIiLAogICAgICAgIGNvdW50OiAiIiwKICAgICAgICB0dXJub3ZlcjogIiIKICAgICAgfSwKICAgICAgYW1vdW50QXZhaWxhYmxlOiAiIiwKICAgICAgLyoqDQogICAgICAgKiDov5vluqbmnaEg5q+U5L6LDQogICAgICAgKi8KICAgICAgc2xpZGVyVmFsdWU6IDAsCiAgICAgIC8qKg0KICAgICAgICog5Yi75bqm5qCH6K6wDQogICAgICAgKi8KICAgICAgc2xpZGVyTWFya3M6IHsKICAgICAgICAiLTUwMCI6IHsKICAgICAgICAgIGxhYmVsOiAiLTUwMCUiLAogICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgd2lkdGg6ICI1MHB4IgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgIi0zNzUiOiAiLTM3NSUiLAogICAgICAgICItMjUwIjogIi0yNTAlIiwKICAgICAgICAiLTEyNSI6ICItMTI1JSIsCiAgICAgICAgMDogIjAiLAogICAgICAgIDEyNTogIjEyNSUiLAogICAgICAgIDI1MDogIjI1MCUiLAogICAgICAgIDM3NTogIjM3NSUiLAogICAgICAgIDUwMDogewogICAgICAgICAgbGFiZWw6ICI1MDAlIiwKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgIHdpZHRoOiAiNTBweCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8qKg0KICAgICAgICog5Li05pe25qCH6K6wa2V5DQogICAgICAgKi8KICAgICAgdGVtcENoYW5nZUtleTogIiIsCiAgICAgIC8v5biB56eN5Lqk5piT5omACiAgICAgIGNvaW5MaXN0OiBbXSwKICAgICAgY3VycmVudE1hcmtldDoge30sCiAgICAgIC8vIOmBrue9qeWxggogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICAvLyDpgInkuK3mlbDnu4QKICAgICAgaWRzOiBbXSwKICAgICAgLy8g6Z2e5Y2V5Liq56aB55SoCiAgICAgIHNpbmdsZTogdHJ1ZSwKICAgICAgLy8g6Z2e5aSa5Liq56aB55SoCiAgICAgIG11bHRpcGxlOiB0cnVlLAogICAgICAvLyDmmL7npLrmkJzntKLmnaHku7YKICAgICAgc2hvd1NlYXJjaDogdHJ1ZSwKICAgICAgLy8g5oC75p2h5pWwCiAgICAgIHRvdGFsOiAwLAogICAgICAvLyDlj5HluIHooajmoLzmlbDmja4KICAgICAgb3duQ29pbkxpc3Q6IFtdLAogICAgICAvLyDlvLnlh7rlsYLmoIfpopgKICAgICAgdGl0bGU6ICIiLAogICAgICAvLyDmmK/lkKbmmL7npLrlvLnlh7rlsYIKICAgICAgb3BlbjogZmFsc2UsCiAgICAgIC8vIOafpeivouWPguaVsAogICAgICBxdWVyeVBhcmFtczogewogICAgICAgIHBhZ2VOdW06IDEsCiAgICAgICAgcGFnZVNpemU6IDEwLAogICAgICAgIGNvaW46IG51bGwsCiAgICAgICAgcmVmZXJDb2luOiBudWxsLAogICAgICAgIHJlZmVyTWFya2V0OiBudWxsLAogICAgICAgIHNob3dTeW1ib2w6IG51bGwsCiAgICAgICAgcHJpY2U6IG51bGwsCiAgICAgICAgcmFpc2luZ0Ftb3VudDogbnVsbCwKICAgICAgICByYWlzZWRBbW91bnQ6IG51bGwsCiAgICAgICAgcGFydGljaXBhbnRzTnVtOiBudWxsLAogICAgICAgIHJhaXNpbmdUaW1lOiBudWxsLAogICAgICAgIGJlZ2luVGltZTogbnVsbCwKICAgICAgICBlbmRUaW1lOiBudWxsLAogICAgICAgIHN0YXR1czogbnVsbAogICAgICB9LAogICAgICAvLyDooajljZXlj4LmlbAKICAgICAgZm9ybToge30sCiAgICAgIC8vIOihqOWNleagoemqjAogICAgICBydWxlczogewogICAgICAgIC8vIHByb3BvcnRpb246IFsKICAgICAgICAvLyAgIHsKICAgICAgICAvLyAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgLy8gICAgIG1lc3NhZ2U6ICLnmb7liIbmr5QiLAogICAgICAgIC8vICAgICB0cmlnZ2VyOiAiYmx1ciIsCiAgICAgICAgLy8gICB9LAogICAgICAgIC8vICAgeyB2YWxpZGF0b3I6IHBlcmNlbnQsIHRyaWdnZXI6ICJibHVyIiB9LAogICAgICAgIC8vIF0sCiAgICAgICAgcmFpc2VkQW1vdW50OiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi5bey56256ZuG6aKd5bqm5LiN5aSn5LqO56256ZuG6aKd5bqmIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIHZhbGlkYXRvcjogY29tcGFyZU1pbiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIHJhaXNpbmdBbW91bnQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLnp4Hli5/lj5HooYzph4/kuI3kuLrnqboiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgcHJpY2U6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLku7fmoLzkuI3kuLowIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIHZhbGlkYXRvcjogbW9uZXlTaG93LAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgcmFpc2luZ1RpbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLlj4LkuI7kurrmlbDkuI3kuLrnqboiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgcGFydGljaXBhbnRzTnVtOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi56256ZuG5pyf6ZmQ5LiN5Li656m6IiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIHNob3dTeW1ib2w6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLlsZXnpLrlkI3np7DkuI3kuLrnqboiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgY29pbjogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuW4geenjeS4jeS4uuepuiIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSwKICAgICAgICBiZWdpblRpbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLlv4XloasiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfSwgewogICAgICAgICAgdmFsaWRhdG9yOiB0aW1lZXIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSwKICAgICAgICBlbmRUaW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi5b+F5aGrIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIHZhbGlkYXRvcjogdGltZWVyLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICAgIHRoaXMuZ2V0U2VsZWN0TGlzdCgpOwogIH0sCiAgLy8gd2F0Y2g6IHsKICAvLyAgIGN1cnJlbnRNYXJrZXQ6IHsKICAvLyAgICAgaGFuZGxlcihuZXdWYWwpIHsKICAvLyAgICAgICB0aGlzLmNoYW5nZUNvaW4obmV3VmFsLmNvaW4gPyBuZXdWYWwuY29pbiA6ICIiKTsKICAvLyAgICAgfSwKICAvLyAgICAgZGVlcDogdHJ1ZSwKICAvLyAgICAgaW1tZWRpYXRlOiB0cnVlLAogIC8vICAgfSwKICAvLyB9LAoKICBtZXRob2RzOiB7CiAgICAvKioNCiAgICAgKiDnq4vljbPlj5HluIMNCiAgICAgKi8KICAgIGhhbmRsZVB1Ymxpc2g6IGZ1bmN0aW9uIGhhbmRsZVB1Ymxpc2gocm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB0aGlzLiRtb2RhbC5jb25maXJtKCLmmK/lkKblj5HluIMiICsgcm93LmNvaW4gKyAi5biB56eNPyIpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChyb3cuc3RhdHVzID09ICIxIikgewogICAgICAgICAgLy8g5b6F5Y+R5biD5biB56eNCiAgICAgICAgICBwdWJsaXNoQ29pbkFwaShyb3cuaWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICBfdGhpczIuZ2V0TGlzdCgpOwogICAgICAgICAgICBfdGhpczIuJG1vZGFsLm1zZ1N1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHJvdy5zdGF0dXMgPT0gIjIiKSB7CiAgICAgICAgICAvLyDov5vooYzkuK3luIHnp40KICAgICAgICAgIHB1Ymxpc2hlZENvaW5BcGkocm93LmlkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgICAgX3RoaXMyLmdldExpc3QoKTsKICAgICAgICAgICAgX3RoaXMyLiRtb2RhbC5tc2dTdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7fSk7CiAgICB9LAogICAgLyoqIOiOt+WPluW4geenjeS6pOaYk+aJgCAqL2dldFNlbGVjdExpc3Q6IGZ1bmN0aW9uIGdldFNlbGVjdExpc3QoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICBfZ2V0U2VsZWN0TGlzdCgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBfcmVzJGRhdGE7CiAgICAgICAgX3RoaXMzLmNvaW5MaXN0ID0gKF9yZXMkZGF0YSA9IHJlcy5kYXRhKSA9PT0gbnVsbCB8fCBfcmVzJGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXMkZGF0YS5tYXAoZnVuY3Rpb24gKGVsZW0pIHsKICAgICAgICAgIGVsZW0ubGFiZWwgPSAiIi5jb25jYXQoZWxlbS5jb2luLCAiLSIpLmNvbmNhdChlbGVtLm1hcmtldCk7CiAgICAgICAgICByZXR1cm4gZWxlbTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLyoq5biB56eN5Lqk5piT5omAICovY2hhbmdlQ29pbjogZnVuY3Rpb24gY2hhbmdlQ29pbihlKSB7CiAgICAgIHZhciBfdGhpcyRjdXJyZW50TWFya2V0LCBfdGhpcyRjdXJyZW50TWFya2V0MiwgX3RoaXMkY3VycmVudE1hcmtldDM7CiAgICAgIHZhciBsaXN0ID0gdGhpcy5jb2luTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbS5jb2luID09IGUpIHsKICAgICAgICAgIHJldHVybiBpdGVtOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuY3VycmVudE1hcmtldCA9IGxpc3RbMF07CiAgICAgIHRoaXMuZm9ybS5yZWZlck1hcmtldCA9IChfdGhpcyRjdXJyZW50TWFya2V0ID0gdGhpcy5jdXJyZW50TWFya2V0KSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TWFya2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50TWFya2V0Lm1hcmtldDsgLy/kuqTmmJPmiYAKICAgICAgdGhpcy5hbW91bnRBdmFpbGFibGUgPSAoX3RoaXMkY3VycmVudE1hcmtldDIgPSB0aGlzLmN1cnJlbnRNYXJrZXQpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRNYXJrZXQyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50TWFya2V0Mi5wcmljZTsKICAgICAgdGhpcy5mb3JtLnByaWNlID0gKF90aGlzJGN1cnJlbnRNYXJrZXQzID0gdGhpcy5jdXJyZW50TWFya2V0KSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TWFya2V0MyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY3VycmVudE1hcmtldDMucHJpY2U7IC8v5Yid5aeL5Lu35qC8CiAgICB9LAogICAgZm9ybWF0VG9vbHRpcDogZnVuY3Rpb24gZm9ybWF0VG9vbHRpcCh2YWwpIHt9LAogICAgLy/mu5HlnZfnm5HlkKwKICAgIHNsaWRlckNoYW5nZTogZnVuY3Rpb24gc2xpZGVyQ2hhbmdlKHZhbCkgewogICAgICBpZiAodGhpcy50ZW1wQ2hhbmdlS2V5KSB7CiAgICAgICAgdGhpcy50ZW1wQ2hhbmdlS2V5ID0gIiI7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIC8vIOS9v+eUqOWPr+eUqOmHkeminSDnmb7liIbmr5Qg6K6h566X5Lqk5piT6YeR6aKdCiAgICAgIGlmICh0aGlzLmFtb3VudEF2YWlsYWJsZSAmJiBOdW1iZXIodmFsKSAhPT0gMCkgewogICAgICAgIC8v55m+5YiG5LmL5LiA5a+55bqU55qE6ZKxCiAgICAgICAgaWYgKE51bWJlcih2YWwpID4gMCkgewogICAgICAgICAgdmFyIHBlcmNlbnRQcmljZSA9IF90b0ZpeGVkKF9kaXYodGhpcy5hbW91bnRBdmFpbGFibGUsIDEwMCksIDYpOwogICAgICAgICAgdGhpcy5mb3JtLnByaWNlID0gX3RvRml4ZWQoX211bChwZXJjZW50UHJpY2UsIHZhbCksIDYpOwogICAgICAgICAgdGhpcy5zbGlkZXJWYWx1ZSA9IE51bWJlcih2YWwpOwogICAgICAgICAgdGhpcy5mb3JtLnByb3BvcnRpb24gPSBfbXVsKF9kaXYodGhpcy5mb3JtLnByaWNlLCB0aGlzLmFtb3VudEF2YWlsYWJsZSksIDEwMCk7CiAgICAgICAgfSBlbHNlIGlmICh2YWwgPCAwKSB7CiAgICAgICAgICAvLyDnmb7liIbkuYvkuIAKICAgICAgICAgIHZhciB4ID0gX2RpdihfYWRkKDUwMCwgdmFsKSwgNTAwKTsKICAgICAgICAgIHRoaXMuZm9ybS5wcmljZSA9IF90b0ZpeGVkKF9tdWwodGhpcy5hbW91bnRBdmFpbGFibGUsIHgpLCA2KTsKICAgICAgICAgIHRoaXMuc2xpZGVyVmFsdWUgPSBOdW1iZXIodmFsKTsKICAgICAgICAgIGlmICh2YWwgPT0gLTUwMCkgewogICAgICAgICAgICB0aGlzLmZvcm0ucHJvcG9ydGlvbiA9IDA7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmZvcm0ucHJvcG9ydGlvbiA9IF9tdWwoX2Rpdih0aGlzLmZvcm0ucHJpY2UsIHRoaXMuYW1vdW50QXZhaWxhYmxlKSwgMTAwKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zbGlkZXJWYWx1ZSA9IDA7CiAgICAgICAgdGhpcy5mb3JtLnByaWNlID0gdGhpcy5hbW91bnRBdmFpbGFibGU7CiAgICAgICAgdGhpcy5mb3JtLnByb3BvcnRpb24gPSAxMDA7CiAgICAgICAgdGhpcy5zbGlkZXJGb3JtLmNvdW50ID0gIjAiOwogICAgICAgIHRoaXMuc2xpZGVyRm9ybS50dXJub3ZlciA9ICIwIjsKICAgICAgfQogICAgfSwKICAgIC8qKiDmn6Xor6Llj5HluIHliJfooaggKi9nZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgbGlzdENvaW4odGhpcy5xdWVyeVBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczQub3duQ29pbkxpc3QgPSByZXNwb25zZS5yb3dzOwogICAgICAgIF90aGlzNC50b3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgIF90aGlzNC5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOWPlua2iOaMiemSrgogICAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7CiAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogICAgLy8g6KGo5Y2V6YeN572uCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHRoaXMuZm9ybSA9IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICBjb2luOiBudWxsLAogICAgICAgIHJlZmVyQ29pbjogbnVsbCwKICAgICAgICByZWZlck1hcmtldDogbnVsbCwKICAgICAgICBzaG93U3ltYm9sOiBudWxsLAogICAgICAgIHByaWNlOiBudWxsLAogICAgICAgIHJhaXNpbmdBbW91bnQ6IG51bGwsCiAgICAgICAgcmFpc2VkQW1vdW50OiBudWxsLAogICAgICAgIHBhcnRpY2lwYW50c051bTogbnVsbCwKICAgICAgICByYWlzaW5nVGltZTogbnVsbCwKICAgICAgICBiZWdpblRpbWU6IG51bGwsCiAgICAgICAgZW5kVGltZTogbnVsbCwKICAgICAgICBzdGF0dXM6IG51bGwsCiAgICAgICAgY3JlYXRlQnk6IG51bGwsCiAgICAgICAgY3JlYXRlVGltZTogbnVsbCwKICAgICAgICB1cGRhdGVCeTogbnVsbCwKICAgICAgICB1cGRhdGVUaW1lOiBudWxsLAogICAgICAgIHJlbWFyazogbnVsbCwKICAgICAgICBwcm9wb3J0aW9uOiBudWxsCiAgICAgIH07CiAgICAgIHRoaXMucmVzZXRGb3JtKCJmb3JtIik7CiAgICB9LAogICAgLyoqIOaQnOe0ouaMiemSruaTjeS9nCAqL2hhbmRsZVF1ZXJ5OiBmdW5jdGlvbiBoYW5kbGVRdWVyeSgpIHsKICAgICAgdGhpcy5xdWVyeVBhcmFtcy5wYWdlTnVtID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLyoqIOmHjee9ruaMiemSruaTjeS9nCAqL3Jlc2V0UXVlcnk6IGZ1bmN0aW9uIHJlc2V0UXVlcnkoKSB7CiAgICAgIHRoaXMucmVzZXRGb3JtKCJxdWVyeUZvcm0iKTsKICAgICAgdGhpcy5oYW5kbGVRdWVyeSgpOwogICAgfSwKICAgIC8vIOWkmumAieahhumAieS4reaVsOaNrgogICAgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVTZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7CiAgICAgIHRoaXMuaWRzID0gc2VsZWN0aW9uLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkOwogICAgICB9KTsKICAgICAgdGhpcy5zaW5nbGUgPSBzZWxlY3Rpb24ubGVuZ3RoICE9PSAxOwogICAgICB0aGlzLm11bHRpcGxlID0gIXNlbGVjdGlvbi5sZW5ndGg7CiAgICB9LAogICAgLyoqIOaWsOWinuaMiemSruaTjeS9nCAqL2hhbmRsZUFkZDogZnVuY3Rpb24gaGFuZGxlQWRkKCkgewogICAgICB0aGlzLnJlc2V0KCk7CiAgICAgIHRoaXMub3BlbiA9IHRydWU7CiAgICAgIHRoaXMubWV0YSA9IHRydWU7CiAgICAgIHRoaXMudGl0bGUgPSAi5re75Yqg5Y+R5biBIjsKICAgIH0sCiAgICAvKiog5L+u5pS55oyJ6ZKu5pON5L2cICovaGFuZGxlVXBkYXRlOiBmdW5jdGlvbiBoYW5kbGVVcGRhdGUocm93KSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICAgIHZhciBpZCA9IHJvdy5pZCB8fCB0aGlzLmlkczsKICAgICAgZ2V0Q29pbihpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczUuZm9ybSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgX3RoaXM1Lm9wZW4gPSB0cnVlOwogICAgICAgIF90aGlzNS5tZXRhID0gZmFsc2U7CiAgICAgICAgX3RoaXM1LnRpdGxlID0gIuS/ruaUueWPkeW4gSI7CiAgICAgIH0pOwogICAgfSwKICAgIC8qKiDmj5DkuqTmjInpkq4gKi9zdWJtaXRGb3JtOiBmdW5jdGlvbiBzdWJtaXRGb3JtKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKICAgICAgdGhpcy4kcmVmc1siZm9ybSJdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKF90aGlzNi5mb3JtLmlkICE9IG51bGwpIHsKICAgICAgICAgICAgdXBkYXRlQ29pbihfdGhpczYuZm9ybSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICBfdGhpczYuJG1vZGFsLm1zZ1N1Y2Nlc3MoIuS/ruaUueaIkOWKnyIpOwogICAgICAgICAgICAgIF90aGlzNi5vcGVuID0gZmFsc2U7CiAgICAgICAgICAgICAgX3RoaXM2LmdldExpc3QoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhZGRDb2luKF90aGlzNi5mb3JtKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgIF90aGlzNi4kbW9kYWwubXNnU3VjY2Vzcygi5paw5aKe5oiQ5YqfIik7CiAgICAgICAgICAgICAgX3RoaXM2Lm9wZW4gPSBmYWxzZTsKICAgICAgICAgICAgICBfdGhpczYuZ2V0TGlzdCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8qKiDliKDpmaTmjInpkq7mk43kvZwgKi9oYW5kbGVEZWxldGU6IGZ1bmN0aW9uIGhhbmRsZURlbGV0ZShyb3cpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CiAgICAgIHZhciBpZHMgPSByb3cuaWQgfHwgdGhpcy5pZHM7CiAgICAgIHRoaXMuJG1vZGFsLmNvbmZpcm0oJ+aYr+WQpuehruiupOWIoOmZpOWPkeW4gee8luWPt+S4uiInICsgaWRzICsgJyLnmoTmlbDmja7pobnvvJ8nKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gZGVsQ29pbihpZHMpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczcuZ2V0TGlzdCgpOwogICAgICAgIF90aGlzNy4kbW9kYWwubXNnU3VjY2Vzcygi5Yig6Zmk5oiQ5YqfIik7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTsKICAgIH0sCiAgICAvKiog5a+85Ye65oyJ6ZKu5pON5L2cICovaGFuZGxlRXhwb3J0OiBmdW5jdGlvbiBoYW5kbGVFeHBvcnQoKSB7CiAgICAgIHRoaXMuZG93bmxvYWQoImJ1c3NpbmVzcy9jb2luL2V4cG9ydCIsIF9vYmplY3RTcHJlYWQoe30sIHRoaXMucXVlcnlQYXJhbXMpLCAiY29pbl8iLmNvbmNhdChuZXcgRGF0ZSgpLmdldFRpbWUoKSwgIi54bHN4IikpOwogICAgfQogIH0KfTs="},null]}