{"remainingRequest":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/babel-loader/lib/index.js!/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/src/views/bussiness/trade-robot/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/src/views/bussiness/trade-robot/index.vue","mtime":1698845798713},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/babel.config.js","mtime":1698845798561},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_timeFormater","_interopRequireDefault","require","echarts","_interopRequireWildcard","_util","_decimal","_tradeRobot","name","data","detail","id","type","modelList","value","label","symbolList","form","rules","symbol","required","message","trigger","totalMinutes","granularity","xTimeScaleList","yRandomList","lineChart","KLineChart","klineYRandomList","klineMockYData","pickerOptions","disabledDate","time","getTime","Date","computed","modelInfo","_this","find","elem","_this$form","model","granularityList","tempList","isPriview","isUpdate","mounted","_this2","_asyncToGenerator2","default","_regeneratorRuntime2","mark","_callee","wrap","_callee$","_context","prev","next","getSymbolList","$route","query","getDetail","reset","window","addEventListener","resize","stop","methods","_this3","_callee2","res","tempData","_callee2$","_context2","getDetailApi","sent","code","console","log","some","decline","increase","conPrice","pricePencent","beginTime","botInfoList","map","x","y","open","close","high","low","generateTimeList","JSON","parse","lineChartData","drawLine","drawKLine","KLinePerview","series","xAxis","submit","_this4","_callee3","tempBotInfoList","nowDate","params","_res","_callee3$","_context3","setSeconds","setMilliseconds","includes","Object","keys","index","concat","dateTime","endTime","length","stringify","$modal","msgError","abrupt","updateDetailApi","msgSuccess","msg","saveTradeRobotApi","onModelChange","val","_this5","resetForm","callback","dispose","option","getMockKLineOption","setOption","$refs","KLineChartRef","init","options","grid","left","right","top","bottom","boundaryGap","axisLabel","fontSize","formatter","TimeFormater","Number","format","yAxis","axisLine","onZero","splitLine","show","lineStyle","color","width","itemStyle","color0","borderColor","borderColor0","borderColorDoji","borderWidth","_this$detail","_this6","lineChartRef","distributeMinutes","getKLineYRandomList","slice","backgroundColor","graphic","title","text","subtext","interval","containLabel","tooltip","axisPointer","axisDimension","_toFixed","min","max","smooth","showSymbol","symbolSize","setLineOption","_this7","util","dataItem","dataIndex","that","shape","r","style","fill","position","convertToPixel","invisible","draggable","z","ondrag","curry","origin","convertFromPixel","ondragend","setTimeout","_this8","_callee4","_callee4$","_context4","getSymbolListApi","pageNum","pageSize","rows"],"sources":["src/views/bussiness/trade-robot/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <SearchFormBox title=\"参数设置\">\r\n      <el-form\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        size=\"small\"\r\n        :inline=\"true\"\r\n        label-width=\"100px\"\r\n        :disabled=\"isPriview || isUpdate\"\r\n      >\r\n        <el-form-item label=\"交易对\" prop=\"symbol\">\r\n          <el-select\r\n            v-model=\"form.symbol\"\r\n            filterable\r\n            placeholder=\"请选择交易对\"\r\n            clearable\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in symbolList\"\r\n              :key=\"index\"\r\n              :label=\"item.showSymbol\"\r\n              :value=\"item.symbol\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"控盘策略\" prop=\"model\">\r\n          <el-radio-group v-model=\"form.model\" @change=\"onModelChange\">\r\n            <el-radio-button\r\n              v-for=\"item in modelList\"\r\n              :key=\"item.label\"\r\n              :label=\"item.value\"\r\n            >\r\n              {{ item.label }}\r\n            </el-radio-button>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"控盘时间\" prop=\"time\" v-if=\"form.model != 0\">\r\n          <el-date-picker\r\n            v-model=\"form.time\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择控盘时间\"\r\n            format=\"yyyy-MM-dd HH:mm\"\r\n            :picker-options=\"pickerOptions\"\r\n          >\r\n          </el-date-picker>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"最大涨幅\" prop=\"increase\" v-if=\"form.model != 0\">\r\n          <el-input\r\n            v-model=\"form.increase\"\r\n            type=\"number\"\r\n            :min=\"0.001\"\r\n            placeholder=\"请输入最大涨幅\"\r\n          >\r\n            <template v-slot:append>%</template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"最大跌幅\" prop=\"decline\" v-if=\"form.model != 0\">\r\n          <el-input\r\n            v-model=\"form.decline\"\r\n            type=\"number\"\r\n            :min=\"0.001\"\r\n            placeholder=\"请输入最大跌幅\"\r\n          >\r\n            <template v-slot:append>%</template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <template v-if=\"form.model != 0\">\r\n          <!-- <el-form-item label=\"控制粒度\" prop=\"granularity\">\r\n            <el-radio-group v-model=\"form.granularity\">\r\n              <el-radio-button\r\n                v-for=\"item in granularityList\"\r\n                :key=\"item.label\"\r\n                :label=\"item.value\"\r\n              >\r\n                {{ item.label }}\r\n              </el-radio-button>\r\n            </el-radio-group>\r\n          </el-form-item> -->\r\n          <el-form-item label=\"浮动比例\" prop=\"pricePencent\">\r\n            <el-input\r\n              v-model=\"form.pricePencent\"\r\n              type=\"number\"\r\n              :min=\"0.001\"\r\n              :max=\"100\"\r\n              placeholder=\"请输入价格浮动比例\"\r\n              @change=\"KLinePerview\"\r\n              style=\"width: 250px\"\r\n            >\r\n              <template v-slot:append>%</template>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item\r\n            label=\"参考价格\"\r\n            prop=\"conPrice\"\r\n            v-if=\"isPriview || isUpdate\"\r\n          >\r\n            <el-input\r\n              v-model=\"form.conPrice\"\r\n              :disabled=\"form.conPrice > 0\"\r\n              type=\"number\"\r\n              :min=\"0.001\"\r\n              placeholder=\"请输入价格浮动比例\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-row>\r\n            <el-col :span=\"24\">\r\n              <el-form-item>\r\n                <el-button\r\n                  type=\"warning\"\r\n                  icon=\"el-icon-edit\"\r\n                  size=\"mini\"\r\n                  plain\r\n                  @click=\"\r\n                    drawLine();\r\n                    KLinePerview();\r\n                  \"\r\n                  v-if=\"form.model != 0\"\r\n                >\r\n                  绘制\r\n                </el-button>\r\n                <!-- <el-button\r\n                  icon=\"el-icon-view\"\r\n                  size=\"mini\"\r\n                  @click=\"KLinePerview()\"\r\n                  v-if=\"form.model != 0\"\r\n                >\r\n                  预览\r\n                </el-button> -->\r\n\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-check\"\r\n                  size=\"mini\"\r\n                  @click=\"submit\"\r\n                  :disabled=\"isPriview\"\r\n                >\r\n                  保存\r\n                </el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </template>\r\n      </el-form>\r\n    </SearchFormBox>\r\n\r\n    <div v-if=\"form.model == 0\">\r\n      <!-- 跟随型 -->\r\n      <TableContentBox :title=\"modelInfo.label\">\r\n        <el-form :disabled=\"isPriview\">\r\n          <el-row>\r\n            <el-col :span=\"6\">\r\n              <el-form-item label=\"浮动价格\" prop=\"conPrice\">\r\n                <el-tooltip\r\n                  effect=\"dark\"\r\n                  placement=\"bottom-start\"\r\n                  content=\"当前币种价格 + 浮动价格\"\r\n                >\r\n                  <i class=\"el-icon-info\" />\r\n                </el-tooltip>\r\n                <el-input\r\n                  v-model=\"form.conPrice\"\r\n                  :min=\"0\"\r\n                  type=\"number\"\r\n                  placeholder=\"请输入浮动价格\"\r\n                >\r\n                  <template v-slot:append>USDT</template>\r\n                </el-input>\r\n              </el-form-item>\r\n            </el-col>\r\n\r\n            <!-- <el-col :span=\"6\" :offset=\"2\">\r\n              <el-form-item label=\"浮动比例\" prop=\"pricePencent\">\r\n                <el-input\r\n                  v-model=\"form.pricePencent\"\r\n                  type=\"number\"\r\n                  placeholder=\"请输入价格浮动比例\"\r\n                >\r\n                  <template v-slot:append>%</template>\r\n                </el-input>\r\n              </el-form-item>\r\n            </el-col> -->\r\n          </el-row>\r\n        </el-form>\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-check\"\r\n          size=\"mini\"\r\n          @click=\"submit\"\r\n          :disabled=\"isPriview\"\r\n        >\r\n          保存\r\n        </el-button>\r\n      </TableContentBox>\r\n    </div>\r\n    <div v-else>\r\n      <!-- 线 图表 -->\r\n      <TableContentBox :title=\"modelInfo.label\">\r\n        <el-row>\r\n          <div class=\"line-chart\" ref=\"lineChartRef\"></div>\r\n        </el-row>\r\n      </TableContentBox>\r\n\r\n      <!-- K线 图表 -->\r\n      <TableContentBox title=\"趋势预览\" style=\"margin-top: 15px\">\r\n        <el-row>\r\n          <div class=\"kline-chart\" ref=\"KLineChartRef\"></div>\r\n        </el-row>\r\n      </TableContentBox>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TimeFormater from \"time-formater\";\r\nimport * as echarts from \"echarts\";\r\nimport {\r\n  generateTimeList,\r\n  getKLineYRandomList,\r\n  distributeMinutes,\r\n  getMockKLineOption,\r\n} from \"./util\";\r\nimport { _toFixed, _div, _mul } from \"./decimal\";\r\nimport {\r\n  getSymbolListApi,\r\n  saveTradeRobotApi,\r\n  getDetailApi,\r\n  updateDetailApi,\r\n} from \"@/api/bussiness/trade-robot.js\";\r\nexport default {\r\n  name: \"TradeRobot\",\r\n\r\n  data() {\r\n    return {\r\n      detail: null,\r\n      // 历史id\r\n      id: null,\r\n      // 类型 priview update\r\n      type: null,\r\n      // 控盘策略列表\r\n      modelList: [\r\n        { value: 0, label: \"跟随型趋势\" },\r\n        // { value: 1, label: \"自定义趋势\" },\r\n        { value: 2, label: \"秒杀型趋势\" },\r\n      ],\r\n      // 币种列表\r\n      symbolList: [],\r\n      // 表单\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        symbol: { required: true, message: \"币种不能为空\", trigger: \"blur\" },\r\n      },\r\n      // 总分钟数\r\n      totalMinutes: 0,\r\n      // 基础粒度\r\n      granularity: 15,\r\n      // X轴时间\r\n      xTimeScaleList: [],\r\n      // Y轴计算比例\r\n      yRandomList: [],\r\n      // 图表实例\r\n      lineChart: null,\r\n      // 图表实例\r\n      KLineChart: null,\r\n      /**\r\n       * k线预处理数据\r\n       */\r\n      klineYRandomList: [],\r\n      /**\r\n       * k线数据\r\n       */\r\n      klineMockYData: [],\r\n\r\n      pickerOptions: {\r\n        //设置禁用状态，参数为当前日期\r\n        disabledDate(time) {\r\n          return time.getTime() < new Date().getTime() - 86400000; //  - 86400000是否包括当天\r\n        },\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    /**\r\n     * 策略信息\r\n     */\r\n    modelInfo() {\r\n      return this.modelList.find(\r\n        (elem) => elem.value == (this.form?.model || 0)\r\n      );\r\n    },\r\n    /**\r\n     * 控制粒度列表\r\n     */\r\n    granularityList() {\r\n      let tempList = [\r\n        { value: 15, label: \"15分钟\" },\r\n        { value: 30, label: \"30分钟\" },\r\n        { value: 60, label: \"1小时\" },\r\n        { value: 120, label: \"2小时\" },\r\n        { value: 240, label: \"4小时\" },\r\n      ];\r\n\r\n      if (this.form.model == 2) {\r\n        // 秒杀型趋势\r\n        tempList = [\r\n          { value: 1, label: \"1分钟\" },\r\n          { value: 5, label: \"5分钟\" },\r\n          { value: 10, label: \"10分钟\" },\r\n          { value: 15, label: \"15分钟\" },\r\n        ];\r\n      }\r\n      return tempList;\r\n    },\r\n    /**\r\n     * 是否为预览\r\n     */\r\n    isPriview() {\r\n      return this.type == \"priview\";\r\n    },\r\n    /**\r\n     * 是否为修改\r\n     */\r\n    isUpdate() {\r\n      return this.type == \"update\";\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.getSymbolList();\r\n    this.id = this.$route.query.id || null;\r\n    this.type = this.$route.query.type || null;\r\n    if (this.id) {\r\n      this.getDetail();\r\n    } else {\r\n      this.reset();\r\n      window.addEventListener(\"resize\", this.resize);\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取数据详情\r\n     */\r\n    async getDetail() {\r\n      const res = await getDetailApi(this.id);\r\n      if (res.code == 200) {\r\n        console.log(res);\r\n        let tempData = res.data;\r\n        this.detail = tempData;\r\n        if (!this.symbolList.some((elem) => elem.symbol == tempData.symbol)) {\r\n          tempData.symbol = \"\";\r\n        }\r\n        this.form = {\r\n          decline: tempData.decline,\r\n          increase: tempData.increase,\r\n          granularity: tempData.granularity,\r\n          model: tempData.model,\r\n          conPrice: tempData.conPrice,\r\n          pricePencent: tempData.pricePencent,\r\n          symbol: tempData.symbol,\r\n          time: new Date(tempData.beginTime),\r\n        };\r\n        this.klineMockYData = tempData.botInfoList.map((elem) => {\r\n          this.klineYRandomList[elem.x] = elem.y;\r\n          return [elem.open, elem.close, elem.high, elem.low];\r\n        });\r\n        this.granularity = this.granularityList[0].value;\r\n\r\n        if (tempData.model == 2) {\r\n          this.totalMinutes = 60;\r\n          this.xTimeScaleList = generateTimeList(\r\n            this.form.time,\r\n            this.granularity,\r\n            this.totalMinutes\r\n          );\r\n        }\r\n        this.yRandomList = JSON.parse(tempData.lineChartData);\r\n        this.drawLine();\r\n        this.drawKLine();\r\n        this.KLinePerview({\r\n          series: [{ data: this.klineMockYData }],\r\n          xAxis: this.xTimeScaleList,\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 提交\r\n     */\r\n    async submit() {\r\n      console.log(\"表单数据\", this.form);\r\n      console.log(\"K线数据 open, close, high, low\", this.klineMockYData);\r\n      console.log(\r\n        \"K线数据 时间\",\r\n        this.klineYRandomList,\r\n        this.form.time.getTime()\r\n      );\r\n      let tempBotInfoList = [];\r\n      this.form.time.setSeconds(0);\r\n      this.form.time.setMilliseconds(0);\r\n\r\n      let nowDate = new Date();\r\n      nowDate.setSeconds(0);\r\n      nowDate.setMilliseconds(0);\r\n\r\n      let time = this.form.time.getTime();\r\n      // if (\r\n      //   [2].includes(this.form.model) &&\r\n      //   time < nowDate.getTime() + 120 * 1000\r\n      // ) {\r\n      //   this.$modal.msgError(\"请将控盘时间设置为 当前时间 + 两分钟\");\r\n      //   return;\r\n      // }\r\n      if ([1, 2].includes(this.form.model)) {\r\n        tempBotInfoList = Object.keys(this.klineYRandomList).map(\r\n          (elem, index) => {\r\n            return {\r\n              x: elem,\r\n              y: `${this.klineYRandomList[index]}`,\r\n\r\n              dateTime: time + elem * this.form.granularity * 60 * 1000,\r\n              open: this.klineMockYData[index][0],\r\n              close: this.klineMockYData[index][1],\r\n              high: this.klineMockYData[index][2],\r\n              low: this.klineMockYData[index][3],\r\n            };\r\n          }\r\n        );\r\n      }\r\n      let params = {\r\n        // 最大跌幅\r\n        decline: this.form.pricePencent,\r\n        // 最大涨幅\r\n        increase: this.form.pricePencent,\r\n        // 控制粒度\r\n        granularity: \"\",\r\n        // 控盘策略 0 跟随型 1 自定义 2 秒杀型\r\n        model: this.form.model,\r\n        // 浮动价格  model为 0 时有效\r\n        conPrice: this.form.conPrice,\r\n        // 浮动比例\r\n        pricePencent: this.form.pricePencent,\r\n        // 交易对\r\n        symbol: this.form.symbol,\r\n        // 开始时间\r\n        beginTime: time,\r\n        // 结束时间\r\n        endTime: \"\",\r\n        // 趋势列表\r\n        botInfoList: [\r\n          {\r\n            close: 0,\r\n            dateTime: time,\r\n            high: 0,\r\n            low: 0,\r\n            open: 0,\r\n            x: \"0\",\r\n            y: \"0\",\r\n          },\r\n        ],\r\n        // 图表刻度数据\r\n        lineChartData: \"[]\",\r\n      };\r\n      if ([1, 2].includes(this.form.model)) {\r\n        // 最大跌幅\r\n        params.decline = this.form.decline;\r\n        // 最大涨幅\r\n        params.increase = this.form.increase;\r\n        // 控制粒度\r\n        params.granularity = this.form.granularity;\r\n        // 开始时间\r\n        params.beginTime = tempBotInfoList[0].dateTime;\r\n        // 结束时间\r\n        params.endTime = tempBotInfoList[tempBotInfoList.length - 1].dateTime;\r\n        // 趋势列表\r\n        params.botInfoList = tempBotInfoList;\r\n        // 图表刻度数据\r\n        params.lineChartData = JSON.stringify(this.yRandomList);\r\n      }\r\n      console.log(params);\r\n      if (this.form.symbol == \"\") {\r\n        this.$modal.msgError(\"交易对不能为空\");\r\n        return false;\r\n      }\r\n      if (this.id) {\r\n        // 修改\r\n        params.id = this.id;\r\n        const res = await updateDetailApi(params);\r\n        if (res.code == 200) {\r\n          this.$modal.msgSuccess(res.msg);\r\n          // 控盘策略 0 跟随型 1 自定义 2 秒杀型\r\n          if (this.form.model == 0) {\r\n            this.form.conPrice = \"\";\r\n          } else {\r\n            this.reset();\r\n          }\r\n        } else {\r\n          this.$modal.msgError(res.msg);\r\n        }\r\n      } else {\r\n        const res = await saveTradeRobotApi(params);\r\n        if (res.code == 200) {\r\n          this.$modal.msgSuccess(res.msg);\r\n          // 控盘策略 0 跟随型 1 自定义 2 秒杀型\r\n          if (this.form.model == 0) {\r\n            this.form.conPrice = \"\";\r\n          } else {\r\n            this.reset();\r\n          }\r\n        } else {\r\n          this.$modal.msgError(res.msg);\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 监听粒度改变\r\n     */\r\n    onModelChange(val) {\r\n      // console.log(\"监听粒度改变\", val);\r\n      if ([1, 2].includes(val)) {\r\n        this.granularity = this.granularityList[0].value;\r\n        this.form.granularity = this.granularity;\r\n        this.pricePencent = 5;\r\n      }\r\n\r\n      if (val == 2) {\r\n        this.totalMinutes = 60;\r\n        this.xTimeScaleList = generateTimeList(\r\n          this.form.time,\r\n          this.granularity,\r\n          this.totalMinutes\r\n        );\r\n        this.drawLine();\r\n        this.drawKLine();\r\n        this.KLinePerview();\r\n      } else if (val == 1) {\r\n        this.totalMinutes = 1 * 24 * 60;\r\n        this.xTimeScaleList = generateTimeList(\r\n          this.form.time,\r\n          this.granularity\r\n        );\r\n        this.drawLine();\r\n        this.drawKLine();\r\n        this.KLinePerview();\r\n      } else if (val == 0) {\r\n        this.resetForm(() => {\r\n          this.form.model = val;\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 充值表单\r\n     */\r\n    resetForm(callback) {\r\n      this.form = {\r\n        // 交易对\r\n        symbol: \"\",\r\n        // 模式\r\n        model: 2,\r\n        // 模拟时间\r\n        time: new Date(),\r\n        // 最大涨幅\r\n        increase: 5,\r\n        // 最大跌幅\r\n        decline: 5,\r\n        // 控制粒度\r\n        granularity: 15,\r\n        // 浮动价格\r\n        conPrice: 0,\r\n        // 价格浮动比例\r\n        pricePencent: 5,\r\n      };\r\n      callback && callback();\r\n    },\r\n    /**\r\n     * 重置表单\r\n     */\r\n    reset() {\r\n      if (this.lineChart) {\r\n        this.lineChart.dispose();\r\n        this.lineChart = null;\r\n      }\r\n      if (this.KLineChart) {\r\n        this.KLineChart.dispose();\r\n        this.KLineChart = null;\r\n      }\r\n      this.resetForm();\r\n      this.id = null;\r\n      this.type = null;\r\n      this.detail = null;\r\n      // 总分钟数\r\n      this.totalMinutes = 1 * 24 * 60;\r\n      // 基础粒度\r\n      this.granularity = 15;\r\n      // X轴时间\r\n      this.xTimeScaleList = [];\r\n      // Y轴计算比例\r\n      this.yRandomList = [];\r\n      // K线计算曲线比例\r\n      this.klineYRandomList = [];\r\n      // K线模拟数据\r\n      this.klineMockYData = [];\r\n      this.onModelChange(this.form.model);\r\n    },\r\n    /**\r\n     * 预览\r\n     */\r\n    KLinePerview(option) {\r\n      if (!option) {\r\n        option = getMockKLineOption(\r\n          this.xTimeScaleList,\r\n          this.klineYRandomList,\r\n          this.form.pricePencent\r\n        );\r\n      }\r\n      console.log(option);\r\n      this.klineMockYData = option.series[0].data || [];\r\n      this.KLineChart && this.KLineChart.setOption(option);\r\n    },\r\n    /**\r\n     * 绘制 KLineChart\r\n     */\r\n    drawKLine() {\r\n      if (!this.KLineChart && this.$refs.KLineChartRef) {\r\n        this.KLineChart = echarts.init(this.$refs.KLineChartRef);\r\n      }\r\n      let options = {\r\n        grid: {\r\n          left: 30,\r\n          right: 50,\r\n          top: 10,\r\n          bottom: 30,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          name: \"时间\",\r\n          boundaryGap: false,\r\n          axisLabel: {\r\n            fontSize: 8,\r\n            formatter: (params) => {\r\n              return TimeFormater(Number(params)).format(\"HH:mm\");\r\n            },\r\n          },\r\n          data: this.xTimeScaleList,\r\n        },\r\n        yAxis: {\r\n          //   min: 0 - this.form.decline,\r\n          //   max: this.form.increase,\r\n          name: \"价格\",\r\n          type: \"value\",\r\n          axisLine: { onZero: false },\r\n          axisLabel: {\r\n            fontSize: 8,\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: [\"#CCC\"],\r\n              width: 1,\r\n              type: \"dashed\",\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"candlestick\",\r\n            itemStyle: {\r\n              color: \"#4bbd83\", // 绿色（涨）\r\n              color0: \"#d62548\", // 红色（跌）\r\n              borderColor: \"#4bbd83\", // 绿色（涨）\r\n              borderColor0: \"#d62548\", // 红色（跌）\r\n              borderColorDoji: null,\r\n              borderWidth: \"1\",\r\n            },\r\n\r\n            data: [],\r\n          },\r\n        ],\r\n      };\r\n      this.KLineChart && this.KLineChart.setOption(options);\r\n    },\r\n    /**\r\n     * 绘制 lineChart\r\n     */\r\n    drawLine() {\r\n      if (this.lineChart) {\r\n        this.lineChart.dispose();\r\n        this.lineChart = null;\r\n      }\r\n      if (this.$refs.lineChartRef) {\r\n        this.lineChart = echarts.init(this.$refs.lineChartRef);\r\n      }\r\n      // 根据控制粒度计算X轴时间刻度\r\n      if (!this.type || this.detail?.granularity != this.form.granularity) {\r\n        // 获取当前粒度X数组\r\n        let xTimeScaleList = distributeMinutes(\r\n          this.totalMinutes,\r\n          this.form.granularity\r\n        );\r\n        // 初始化默认Y数组\r\n        this.yRandomList = xTimeScaleList.map((elem, index) => {\r\n          return [xTimeScaleList[index] / this.granularity, 0];\r\n        });\r\n        // 获取模拟K线数据\r\n        this.klineYRandomList = getKLineYRandomList(\r\n          this.xTimeScaleList,\r\n          this.yRandomList\r\n        ).slice(0, this.xTimeScaleList.length);\r\n      }\r\n      // 计算options\r\n      let options = {\r\n        backgroundColor: \"#fff\",\r\n        graphic: null,\r\n        title: {\r\n          text: \"\",\r\n          subtext: \"\",\r\n          x: \"center\",\r\n        },\r\n        interval: 1,\r\n        grid: {\r\n          left: 30,\r\n          right: 50,\r\n          top: 10,\r\n          bottom: 30,\r\n          containLabel: false, //grid 区域是否包含坐标轴的刻度标签\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            label: {\r\n              formatter: (params) => {\r\n                if (params.axisDimension == \"x\") {\r\n                  return TimeFormater(Number(params.value)).format(\r\n                    \"YYYY-MM-DD HH:mm\"\r\n                  );\r\n                } else if (params.axisDimension == \"y\") {\r\n                  return _toFixed(params.value, 4);\r\n                }\r\n              },\r\n            },\r\n            lineStyle: {\r\n              color: \"#3B91FF\",\r\n            },\r\n          },\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          name: \"时间\",\r\n          boundaryGap: false,\r\n          axisLabel: {\r\n            fontSize: 8,\r\n            formatter: (params) => {\r\n              return TimeFormater(Number(params)).format(\"HH:mm\");\r\n            },\r\n          },\r\n\r\n          splitLine: {\r\n            //网格线\r\n            show: true,\r\n            lineStyle: {\r\n              color: [\"#CCC\"],\r\n              width: 1,\r\n              type: \"dashed\",\r\n            },\r\n          },\r\n          data: this.xTimeScaleList,\r\n        },\r\n        yAxis: {\r\n          min: 0 - this.form.decline,\r\n          max: this.form.increase,\r\n          name: \"价格\",\r\n          type: \"value\",\r\n          //   axisLine: { onZero: false },\r\n          axisLabel: {\r\n            fontSize: 8,\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: [\"#CCC\"],\r\n              width: 1,\r\n              type: \"dashed\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          {\r\n            data: this.yRandomList,\r\n            type: \"line\",\r\n            smooth: true,\r\n            symbol: \"circle\",\r\n            showSymbol: true,\r\n            symbolSize: 12,\r\n            itemStyle: {\r\n              color: \"#3B91FF\",\r\n            },\r\n            lineStyle: {\r\n              color: \"#3B91FF\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.lineChart && this.lineChart.setOption(options);\r\n      if (!this.isPriview) {\r\n        this.setLineOption();\r\n      }\r\n    },\r\n    /**\r\n     * 设置拖拽\r\n     */\r\n    setLineOption() {\r\n      this.lineChart.setOption({\r\n        graphic: echarts.util.map(this.yRandomList, (dataItem, dataIndex) => {\r\n          const that = this; // 因为ondrag函数必须在回调内使用this.position获取实时坐标，此处必须用that替换this\r\n          return {\r\n            type: \"circle\",\r\n            shape: {\r\n              // 圆点的半径。\r\n              r: 10,\r\n            },\r\n            style: {\r\n              fill: \"#3B91FF\", // 设置圆点的填充色，这里设置为红色\r\n            },\r\n            position: this.lineChart.convertToPixel(\"grid\", dataItem),\r\n            invisible: true,\r\n            draggable: true,\r\n            z: 100,\r\n            ondrag: echarts.util.curry(function (dataIndex) {\r\n              let origin = that.lineChart.convertToPixel(\r\n                \"grid\",\r\n                that.yRandomList[dataIndex]\r\n              );\r\n              this.position[0] = origin[0]; // 控制每个点位只能在y轴方向移动\r\n              // this.position[1] = origin[1] // 控制每个点位只能在x轴方向移动\r\n              // 实时获取拖动的点位信息并根据此信息重新画图\r\n              let tempData = that.lineChart.convertFromPixel(\r\n                \"grid\",\r\n                this.position\r\n              );\r\n              if (tempData[1] > that.form.increase) {\r\n                tempData[1] = that.form.increase;\r\n              } else if (tempData[1] < 0 - that.form.decline) {\r\n                tempData[1] = 0 - that.form.decline;\r\n              }\r\n              that.yRandomList[dataIndex] = tempData;\r\n\r\n              that.lineChart.setOption({\r\n                series: [\r\n                  {\r\n                    data: that.yRandomList,\r\n                  },\r\n                ],\r\n              });\r\n            }, dataIndex),\r\n            ondragend: function () {\r\n              that.klineYRandomList = getKLineYRandomList(\r\n                that.xTimeScaleList,\r\n                that.yRandomList\r\n              ).slice(0, that.xTimeScaleList.length);\r\n              setTimeout(that.KLinePerview, 300);\r\n              // 拖拽结束时，再次检查位置是否超出范围，如果超出则重置为合法位置\r\n              const origin = that.lineChart.convertToPixel(\r\n                \"grid\",\r\n                that.yRandomList[dataIndex]\r\n              );\r\n              const tempData = that.lineChart.convertFromPixel(\r\n                \"grid\",\r\n                this.position\r\n              );\r\n              if (tempData[1] > that.form.increase) {\r\n                this.position[1] = origin[1];\r\n              } else if (tempData[1] < 0 - that.form.decline) {\r\n                this.position[1] = origin[1];\r\n              }\r\n            },\r\n          };\r\n        }),\r\n      });\r\n    },\r\n    /**\r\n     * 监听大小\r\n     */\r\n    resize() {\r\n      this.lineChart && this.lineChart.resize();\r\n      this.KLineChart && this.KLineChart.resize();\r\n    },\r\n    async getSymbolList() {\r\n      const res = await getSymbolListApi({\r\n        pageNum: 1,\r\n        pageSize: 1000,\r\n      });\r\n      if (res.code == 200) {\r\n        this.symbolList = res.rows;\r\n        this.form.symbol = this.symbolList[0].symbol;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.line-chart,\r\n.kline-chart {\r\n  height: 800px;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}