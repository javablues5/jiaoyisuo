{"remainingRequest":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/babel-loader/lib/index.js!/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/src/views/bussiness/trade-robot/util.js","dependencies":[{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/src/views/bussiness/trade-robot/util.js","mtime":1698845798714},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/babel.config.js","mtime":1698845798561},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_decimal","require","_loadsh","_interopRequireDefault","generateTimeList","exports","time","timeInterval","timeDiff","startTime","Date","setSeconds","endTime","setDate","getDate","getTime","timeArray","Array","from","length","Math","ceil","item","index","currentTime","push","getRandomIntegers","count","min","max","floor","random","distributeMinutes","totalMinutes","unit","timeList","i","randomUD","getMockKLineOption","xTimeScaleList","klineYRandomList","pricePencent","klineMockYData","map","elem","randClose","randHigh","randLow","currentKLineY","Number","tempObj","open","close","_add","_mul","_sub","high","low","slice","xAxis","data","series","getKLineYRandomList","xList","yList","tempKLineYRandomList","precision","_div","forEach","nextElem","j","diff","result","diffDivided","relativeDistance","halfPiTimesRelativeDistance","PI","sinValue","sin","getKLineYRandomListDebounce","_","debounce"],"sources":["/Users/ying/Downloads/Telegram Desktop/javanew/echo2.0-admin/src/views/bussiness/trade-robot/util.js"],"sourcesContent":["import { _add, _mul, _sub, _div } from \"./decimal\";\r\nimport _ from \"loadsh\";\r\n/**\r\n * 获取一天时间 时间间隔列表\r\n * @param {*} time time\r\n * @param {*} interval min\r\n * @param {*} timeDiff min\r\n * @returns\r\n */\r\nexport const generateTimeList = (time, timeInterval, timeDiff) => {\r\n  // 获取当前日期的午夜时间\r\n  const startTime = new Date(time).setSeconds(0);\r\n  // 结束时间 获取第二天的午夜时间\r\n  let endTime = new Date(startTime).setDate(new Date(startTime).getDate() + 1);\r\n  if (timeDiff) {\r\n    // 自定义时差\r\n    endTime = new Date(startTime).getTime() + timeDiff * 60 * 1000;\r\n  }\r\n\r\n  timeInterval = timeInterval * 60 * 1000;\r\n  // 使用 Array.from() 创建时间数组，第一个参数是生成的数组的长度，第二个参数是一个映射函数，用于处理数组的每个元素\r\n  let timeArray = Array.from(\r\n    { length: Math.ceil((endTime - startTime) / timeInterval) },\r\n    (item, index) => {\r\n      const currentTime = startTime + index * timeInterval;\r\n      return new Date(currentTime).getTime();\r\n    }\r\n  );\r\n  timeArray.push(endTime);\r\n  return timeArray;\r\n};\r\n\r\n/**\r\n * 获取随机值列表\r\n * @param {*} count\r\n * @param {*} min\r\n * @param {*} max\r\n * @returns\r\n */\r\nexport const getRandomIntegers = (count, min, max) => {\r\n  // 然后将其映射到 min 到 max 之间的整数\r\n  return Array.from({ length: count }, (item, index) => [\r\n    index,\r\n    Math.floor(Math.random() * (max - min + 1)) + min,\r\n  ]);\r\n};\r\n/**\r\n * 获取分割数据\r\n * @param {*} totalMinutes 总分钟数\r\n * @param {*} unit 刻度单位\r\n * @returns\r\n */\r\nexport const distributeMinutes = (totalMinutes, unit) => {\r\n  let timeList = [];\r\n  let count = Math.floor(totalMinutes / unit);\r\n\r\n  for (let i = 0; i <= count; i++) {\r\n    timeList.push(i * unit);\r\n  }\r\n  return timeList;\r\n};\r\n/**\r\n * 随机涨跌\r\n * @returns\r\n */\r\nconst randomUD = () => Math.random() >= 0.5;\r\n\r\n/**\r\n * 随机K线数据\r\n */\r\nexport const getMockKLineOption = (\r\n  xTimeScaleList,\r\n  klineYRandomList,\r\n  pricePencent\r\n) => {\r\n  if (xTimeScaleList.length && klineYRandomList.length && pricePencent) {\r\n    let klineMockYData = xTimeScaleList.map((elem, index) => {\r\n      // 随机生成开盘价、收盘价、最高价、最低价\r\n      var randClose = Math.ceil(Math.random() * pricePencent); // 收盘价格\r\n      var randHigh = Math.ceil(Math.random() * pricePencent);\r\n      var randLow = Math.ceil(Math.random() * pricePencent);\r\n\r\n      let currentKLineY = klineYRandomList[index];\r\n      if (!Number(klineYRandomList[index])) {\r\n        currentKLineY = 1;\r\n      }\r\n      let tempObj = {};\r\n\r\n      if (index == 0) {\r\n        tempObj.open = 0;\r\n      } else {\r\n        tempObj.open = klineYRandomList[index - 1];\r\n      }\r\n\r\n      // 随机涨跌\r\n      if (randomUD()) {\r\n        tempObj.close = _add(\r\n          klineYRandomList[index],\r\n          _mul(currentKLineY, randClose / 100)\r\n        );\r\n      } else {\r\n        tempObj.close = _sub(\r\n          klineYRandomList[index],\r\n          _mul(currentKLineY, randClose / 100)\r\n        );\r\n      }\r\n\r\n      if (tempObj.open > tempObj.close) {\r\n        // 开盘价大于收盘价\r\n        tempObj.high = _add(tempObj.open, _mul(tempObj.open, randHigh / 100));\r\n        tempObj.low = _sub(tempObj.close, _mul(tempObj.close, randLow / 100));\r\n      } else {\r\n        // 开盘价小于收盘价\r\n        tempObj.high = _add(tempObj.close, _mul(tempObj.close, randHigh / 100));\r\n        tempObj.low = _sub(tempObj.open, _mul(tempObj.open, randLow / 100));\r\n      }\r\n      return [tempObj.open, tempObj.close, tempObj.high, tempObj.low];\r\n    });\r\n    klineMockYData.slice(-1);\r\n    return {\r\n      xAxis: {\r\n        data: xTimeScaleList,\r\n      },\r\n      series: [\r\n        {\r\n          data: klineMockYData,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 计算曲线 坐标值\r\n */\r\nexport const getKLineYRandomList = (xList, yList) => {\r\n  let tempKLineYRandomList = [];\r\n  // 精度\r\n  let precision = _div(xList.length - 1, yList.length - 1);\r\n\r\n  yList.forEach((elem, i) => {\r\n    // 刻度循环\r\n    let nextElem = yList[i + 1] || elem;\r\n    for (var j = i * precision; j < (i + 1) * precision; j++) {\r\n      // 精度循环\r\n      let diff = _sub(elem[1], nextElem[1]);\r\n      let result = 0;\r\n\r\n      let diffDivided = _div(diff, precision);\r\n      let relativeDistance = _sub(j, _mul(i, precision));\r\n      let halfPiTimesRelativeDistance = _mul(\r\n        _div(Math.PI, 2),\r\n        relativeDistance\r\n      );\r\n      let sinValue = Math.sin(_div(halfPiTimesRelativeDistance, precision));\r\n      result = _sub(\r\n        elem[1],\r\n        _mul(_mul(diffDivided, relativeDistance), sinValue)\r\n      );\r\n      tempKLineYRandomList[j] = result;\r\n    }\r\n  });\r\n  return tempKLineYRandomList;\r\n};\r\n/**\r\n * 防抖计算\r\n */\r\nexport const getKLineYRandomListDebounce = _.debounce(getKLineYRandomList, 0);\r\n"],"mappings":"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"}]}