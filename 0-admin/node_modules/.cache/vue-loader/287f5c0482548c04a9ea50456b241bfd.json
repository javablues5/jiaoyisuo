{"remainingRequest":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/src/views/deposit/withdrawalChannel/index copy.vue?vue&type=style&index=0&id=4ab01ae2&lang=scss&scoped=true","dependencies":[{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/src/views/deposit/withdrawalChannel/index copy.vue","mtime":1698845798727},{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ying/Downloads/Telegram Desktop/新建文件夹 (2)/echo2.0-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCjpkZWVwKC5lbC1pbnB1dF9faW5uZXIpIHsNCiAgd2lkdGg6IDQwMHB4ICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["index copy.vue"],"names":[],"mappingsqBA;AACA;AACA","file":"index copy.vue","sourceRoot":"src/views/deposit/withdrawalChannel","sourcesContent":["<!--\r\n * @Autor: Aka\r\n * @Date: 2023-07-13 16:49:05\r\n * @Description: \r\n * @LastEditTime: 2023-08-08 14:56:41\r\n-->\r\n<template>\r\n  <div class=\"app-container\">\r\n    <el-form\r\n      ref=\"currencyForm\"\r\n      :model=\"withdrawaChannelForm\"\r\n      label-width=\"100px\"\r\n    >\r\n      <el-form-item\r\n        label=\"\"\r\n        v-for=\"(item, index) in withdrawaChannelForm.channelList\"\r\n        :key=\"index\"\r\n      >\r\n        <div style=\"margin-bottom: 10px\">\r\n          提现币种：\r\n          <el-input\r\n            maxlength=\"100\"\r\n            v-model.trim=\"item.rechargeType\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n          展示名称：\r\n          <el-input\r\n            v-model.trim=\"item.rechargeName\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n          提现状态：\r\n          <el-select\r\n            v-model=\"item.status\"\r\n            placeholder=\"请选择提现状态\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          >\r\n            <el-option label=\"开启\" value=\"1\"></el-option>\r\n            <el-option label=\"关闭\" value=\"0\"></el-option>\r\n          </el-select>\r\n          提现类型：\r\n          <el-select\r\n            v-model=\"item.type\"\r\n            placeholder=\"请选择提现类型\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          >\r\n            <el-option label=\"银行卡\" value=\"1\"></el-option>\r\n            <el-option label=\"数据货币\" value=\"0\"></el-option>\r\n          </el-select>\r\n        </div>\r\n        <div style=\"margin-bottom: 10px\">\r\n          最大限制：\r\n          <el-input\r\n            v-model.trim=\"item.withdrawalMax\"\r\n            maxlength=\"20\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n          最小限制：\r\n          <el-input\r\n            v-model.trim=\"item.withdrawalMix\"\r\n            maxlength=\"20\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n          手续费率：\r\n          <el-input\r\n            v-model.trim=\"item.ratio\"\r\n            maxlength=\"20\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n          次数限制(日)：\r\n          <el-input\r\n            v-model.trim=\"item.dayWithdrawalNum\"\r\n            maxlength=\"5\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n        </div>\r\n        <div style=\"margin-bottom: 15px\">\r\n          免费提现次数：\r\n          <el-input\r\n            v-model.trim=\"item.freeNum\"\r\n            maxlength=\"5\"\r\n            style=\"width: 150px; margin-right: 10px; margin-bottom: 5px\"\r\n          ></el-input>\r\n          <el-button type=\"danger\" @click=\"delectBtnChanne(index)\"\r\n            >删除</el-button\r\n          >\r\n          <el-button\r\n            type=\"success\"\r\n            @click=\"addChanneBtn\"\r\n            v-show=\"withdrawaChannelForm.channelList.length !== 0\"\r\n            >添加</el-button\r\n          >\r\n        </div>\r\n      </el-form-item>\r\n      <el-form-item label=\"\">\r\n        <el-button type=\"primary\" @click=\"saveChannelBtn\">保存</el-button>\r\n        <el-button\r\n          type=\"success\"\r\n          @click=\"addChanneBtn\"\r\n          v-show=\"withdrawaChannelForm.channelList.length === 0\"\r\n          >添加</el-button\r\n        >\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getSettingConfig, saveSettingConfig } from \"@/api/public.js\";\r\nexport default {\r\n  data() {\r\n    var checkRechargeMax = (rule, value, callback) => {\r\n      if (value) {\r\n        if (\r\n          !/^[1-9]\\d*(\\.\\d{1,6})?$|^0(\\.\\d{1,6})?$/.test(value) ||\r\n          Number(value) === 0\r\n        ) {\r\n          return callback(new Error(\"请输入最多保留6位小数的大于0的数字\"));\r\n        } else {\r\n          callback();\r\n        }\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var compareMax = (rule, value, callback) => {\r\n      if (value) {\r\n        if (Number(value) <= Number(this.rechargeForm.rechargeMin)) {\r\n          return callback(new Error(\"充值最大额不能小于充值最低额\"));\r\n        } else {\r\n          callback();\r\n        }\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var compareMin = (rule, value, callback) => {\r\n      if (value) {\r\n        if (Number(value) >= Number(this.rechargeForm.rechargeMax)) {\r\n          return callback(new Error(\"充值最低额不大于充值最大额\"));\r\n        } else {\r\n          callback();\r\n        }\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var rechargeNum = (rule, value, callback) => {\r\n      if (value) {\r\n        if (!/^\\+?[1-9][0-9]*$/.test(value)) {\r\n          return callback(new Error(\"只能输入非零的正整数\"));\r\n        } else {\r\n          callback();\r\n        }\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      activeName: \"fourth\",\r\n      rechargeForm: {\r\n        rechargeMax: \"\",\r\n        rechargeMin: \"\",\r\n        rechargeBtc: \"\",\r\n        rechargeEth: \"\",\r\n        rechargeUsdtTrc: \"\",\r\n        rechargeUsdtErc: \"\",\r\n        rechargeNum: \"\",\r\n      },\r\n      rechargeRules: {\r\n        rechargeMax: [\r\n          { required: true, message: \"请输入充值最大额\", trigger: \"blur\" },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: \"长度在 1 到 20 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: checkRechargeMax, trigger: \"blur\" },\r\n          { validator: compareMax, trigger: \"blur\" },\r\n        ],\r\n        rechargeMin: [\r\n          { required: true, message: \"请输入充值最低额\", trigger: \"blur\" },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: \"长度在 1 到 20 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: checkRechargeMax, trigger: \"blur\" },\r\n          { validator: compareMin, trigger: \"blur\" },\r\n        ],\r\n        rechargeBtc: [\r\n          { required: true, message: \"请输入Btc充值地址\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 200,\r\n            message: \"长度在 3 到 200 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        rechargeEth: [\r\n          { required: true, message: \"请输入Eth充值地址\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 200,\r\n            message: \"长度在 3 到 200 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        rechargeUsdtTrc: [\r\n          { required: true, message: \"请输入充值U-TRC\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 200,\r\n            message: \"长度在 3 到 200 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        rechargeUsdtErc: [\r\n          { required: true, message: \"请输入充值U-ERC\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 200,\r\n            message: \"长度在 3 到 200 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        rechargeNum: [\r\n          { required: true, message: \"请输入充值次数\", trigger: \"blur\" },\r\n          {\r\n            min: 1,\r\n            max: 5,\r\n            message: \"长度在 1 到 5 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: rechargeNum, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      currencyForm: {\r\n        currencyList: [],\r\n      },\r\n      // 提现设置\r\n      withdrawaForm: {\r\n        ratio: \"\",\r\n        dayWithdrawalNum: \"\",\r\n        freeNum: \"\",\r\n        withdrawalMax: \"\",\r\n        withdrawalMix: \"\",\r\n      },\r\n      withdrawaRules: {\r\n        ratio: [\r\n          { required: true, message: \"请输入手续费\", trigger: \"blur\" },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: \"长度在 1 到 20 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: checkRechargeMax, trigger: \"blur\" },\r\n        ],\r\n        dayWithdrawalNum: [\r\n          {\r\n            required: true,\r\n            message: \"请输入每日提现次数限制\",\r\n            trigger: \"blur\",\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 5,\r\n            message: \"长度在 1 到 5 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: rechargeNum, trigger: \"blur\" },\r\n        ],\r\n        freeNum: [\r\n          {\r\n            required: true,\r\n            message: \"请输入系统免费提现次数\",\r\n            trigger: \"blur\",\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 5,\r\n            message: \"长度在 1 到 5 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: rechargeNum, trigger: \"blur\" },\r\n        ],\r\n        withdrawalMax: [\r\n          { required: true, message: \"请输入最大限制\", trigger: \"blur\" },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: \"长度在 1 到 20 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: checkRechargeMax, trigger: \"blur\" },\r\n        ],\r\n        withdrawalMix: [\r\n          { required: true, message: \"请输入最小限制\", trigger: \"blur\" },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: \"长度在 1 到 20 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: checkRechargeMax, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 提现通道\r\n      withdrawaChannelForm: {\r\n        channelList: [],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     * 切换\r\n     */\r\n    handleClick() {\r\n      if (this.activeName === \"first\") {\r\n        this.getRecharge();\r\n      } else if (this.activeName === \"second\") {\r\n        this.getCurrency();\r\n      } else if (this.activeName === \"third\") {\r\n        this.withdrawa();\r\n      } else if (this.activeName === \"fourth\") {\r\n        this.getWithdrawaChannel();\r\n      }\r\n    },\r\n    /** 充值保存 */\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          try {\r\n            saveSettingConfig(\r\n              \"RECHARGE_SETTING\",\r\n              JSON.stringify(this.rechargeForm)\r\n            ).then((res) => {\r\n              if (res.code === 200) {\r\n                this.$message({\r\n                  message: \"保存成功\",\r\n                  type: \"success\",\r\n                });\r\n              }\r\n            });\r\n          } catch (error) {}\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    /** 获取充值列表 */\r\n    async getRecharge() {\r\n      try {\r\n        const res = await getSettingConfig(\"RECHARGE_SETTING\");\r\n        if (res.code === 200) {\r\n          const result = res.data;\r\n          this.rechargeForm.rechargeMax = result.rechargeMax\r\n            ? result.rechargeMax + \"\"\r\n            : \"\";\r\n          this.rechargeForm.rechargeMin = result.rechargeMin\r\n            ? result.rechargeMin + \"\"\r\n            : \"\";\r\n          this.rechargeForm.rechargeBtc = result.rechargeBtc\r\n            ? result.rechargeBtc + \"\"\r\n            : \"\";\r\n          this.rechargeForm.rechargeEth = result.rechargeEth\r\n            ? result.rechargeEth + \"\"\r\n            : \"\";\r\n          this.rechargeForm.rechargeUsdtTrc = result.rechargeUsdtTrc\r\n            ? result.rechargeUsdtTrc + \"\"\r\n            : \"\";\r\n          this.rechargeForm.rechargeUsdtErc = result.rechargeUsdtErc\r\n            ? result.rechargeUsdtErc + \"\"\r\n            : \"\";\r\n          this.rechargeForm.rechargeNum = result.rechargeNum\r\n            ? result.rechargeNum + \"\"\r\n            : \"\";\r\n        }\r\n      } catch (e) {\r\n        console.log(\"请求失败\");\r\n      }\r\n    },\r\n    /**添加 */\r\n    addBtn() {\r\n      let data = {\r\n        coinName: \"\",\r\n        coin: \"\",\r\n      };\r\n      this.currencyForm.currencyList.push(data);\r\n    },\r\n    /**删除 */\r\n    delectBtn(index) {\r\n      this.currencyForm.currencyList.splice(index, 1);\r\n    },\r\n    /** 保存 */\r\n    saveBtn() {\r\n      if (\r\n        this.currencyForm.currencyList.some((val) =>\r\n          val.coinName == \"\" ||\r\n          val.coin === \"\" ||\r\n          val.rechargeMax === \"\" ||\r\n          val.rechargeMin === \"\" ||\r\n          val.coinAddress === \"\" ||\r\n          val.rechargeNum === \"\"\r\n            ? true\r\n            : false\r\n        )\r\n      ) {\r\n        this.$message({\r\n          type: \"error\",\r\n          message: \"请填写完整内容\",\r\n        });\r\n        return;\r\n      }\r\n      let flagNum = 0;\r\n      this.currencyForm.currencyList.forEach((element) => {\r\n        if (\r\n          !/^[1-9]\\d*(\\.\\d{1,6})?$|^0(\\.\\d{1,6})?$/.test(element.rechargeMax) ||\r\n          Number(element.rechargeMax) === 0\r\n        ) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"充值最大额请输入最多保留6位小数的大于0的数字\",\r\n          });\r\n        }\r\n        if (\r\n          Number(element.rechargeMax) <= Number(this.rechargeForm.rechargeMin)\r\n        ) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"充值最大额不能小于充值最低额\",\r\n          });\r\n        }\r\n        if (\r\n          !/^[1-9]\\d*(\\.\\d{1,6})?$|^0(\\.\\d{1,6})?$/.test(element.rechargeMin) ||\r\n          Number(element.rechargeMin) === 0\r\n        ) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \" 充值最低额请输入最多保留6位小数的大于0的数字\",\r\n          });\r\n        }\r\n        if (Number(element.rechargeMin) >= Number(element.rechargeMax)) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"充值最低额不大于充值最大额\",\r\n          });\r\n        }\r\n        if (!/^\\+?[1-9][0-9]*$/.test(element.rechargeNum)) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"充值次数只能输入非零的正整数\",\r\n          });\r\n        }\r\n        flagNum = flagNum + 1;\r\n      });\r\n      const newListLength = new Set(\r\n        this.currencyForm.currencyList.map((item) => item.coinName)\r\n      ).size;\r\n      const listLength = this.currencyForm.currencyList.length;\r\n      if (listLength > newListLength) {\r\n        return this.$message({\r\n          type: \"error\",\r\n          message: \"请输入不同名称的的币种\",\r\n        });\r\n      }\r\n      if (flagNum === this.currencyForm.currencyList.length) {\r\n        try {\r\n          saveSettingConfig(\r\n            \"ASSET_COIN\",\r\n            JSON.stringify(this.currencyForm.currencyList)\r\n          ).then((res) => {\r\n            if (res.code === 200) {\r\n              this.$message({\r\n                message: \"保存成功\",\r\n                type: \"success\",\r\n              });\r\n            }\r\n          });\r\n        } catch (error) {}\r\n      }\r\n    },\r\n    /** 获取币种列表 */\r\n    async getCurrency() {\r\n      try {\r\n        const res = await getSettingConfig(\"ASSET_COIN\");\r\n        if (res.code === 200) {\r\n          const result = res.data;\r\n          for (let i = 0; i < result.length; i++) {\r\n            for (let key in result[i]) {\r\n              if (!result[i][key]) {\r\n                result[i][key] = \"\";\r\n              }\r\n            }\r\n          }\r\n          this.currencyForm.currencyList = result;\r\n        }\r\n      } catch (e) {\r\n        console.log(\"请求失败\");\r\n      }\r\n    },\r\n    /**提现设置保存 */\r\n    submitWithdrawaForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          try {\r\n            saveSettingConfig(\r\n              \"WITHDRAWAL_SETTING\",\r\n              JSON.stringify(this.withdrawaForm)\r\n            ).then((res) => {\r\n              if (res.code === 200) {\r\n                this.$message({\r\n                  message: \"保存成功\",\r\n                  type: \"success\",\r\n                });\r\n              }\r\n            });\r\n          } catch (error) {}\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    /**提现获取 */\r\n    async withdrawa() {\r\n      try {\r\n        const res = await getSettingConfig(\"WITHDRAWAL_SETTING\");\r\n        if (res.code === 200) {\r\n          const result = res.data;\r\n          this.withdrawaForm.ratio = result.ratio ? result.ratio + \"\" : \"\";\r\n          this.withdrawaForm.dayWithdrawalNum = result.dayWithdrawalNum\r\n            ? result.dayWithdrawalNum + \"\"\r\n            : \"\";\r\n          this.withdrawaForm.freeNum = result.freeNum\r\n            ? result.freeNum + \"\"\r\n            : \"\";\r\n          this.withdrawaForm.withdrawalMax = result.withdrawalMax\r\n            ? result.withdrawalMax + \"\"\r\n            : \"\";\r\n          this.withdrawaForm.withdrawalMix = result.withdrawalMix\r\n            ? result.withdrawalMix + \"\"\r\n            : \"\";\r\n        }\r\n      } catch (e) {\r\n        console.log(\"请求失败\");\r\n      }\r\n    },\r\n    /** 提现通道  */\r\n    async getWithdrawaChannel() {\r\n      try {\r\n        const res = await getSettingConfig(\"WITHDRAWAL_CHANNEL_SETTING\");\r\n        if (res.code === 200) {\r\n          const result = res.data;\r\n          for (let i = 0; i < result.length; i++) {\r\n            for (let key in result[i]) {\r\n              if (!result[i][key]) {\r\n                result[i][key] = \"\";\r\n              }\r\n            }\r\n          }\r\n          this.withdrawaChannelForm.channelList = result;\r\n        }\r\n      } catch (e) {\r\n        console.log(\"请求失败\");\r\n      }\r\n    },\r\n    delectBtnChanne(index) {\r\n      this.withdrawaChannelForm.channelList.splice(index, 1);\r\n    },\r\n    addChanneBtn() {\r\n      let data = {\r\n        status: \"\",\r\n        rechargeName: \"\",\r\n        rechargeType: \"\",\r\n        type: \"\",\r\n      };\r\n      this.withdrawaChannelForm.channelList.push(data);\r\n    },\r\n    /** 保存 */\r\n    saveChannelBtn() {\r\n      if (\r\n        this.withdrawaChannelForm.channelList.some((val) =>\r\n          val.rechargeType == \"\" ||\r\n          val.rechargeName === \"\" ||\r\n          val.status === \"\" ||\r\n          val.type === \"\" ||\r\n          val.ratio === \"\" ||\r\n          val.dayWithdrawalNum === \"\" ||\r\n          val.freeNum === \"\" ||\r\n          val.withdrawalMax === \"\" ||\r\n          val.withdrawalMix === \"\"\r\n            ? true\r\n            : false\r\n        )\r\n      ) {\r\n        this.$message({\r\n          type: \"error\",\r\n          message: \"请填写完整内容\",\r\n        });\r\n        return;\r\n      }\r\n      let flagNum = 0;\r\n      this.withdrawaChannelForm.channelList.forEach((element) => {\r\n        if (\r\n          !/^[1-9]\\d*(\\.\\d{1,6})?$|^0(\\.\\d{1,6})?$/.test(element.ratio) ||\r\n          Number(element.ratio) === 0\r\n        ) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"手续费请输入最多保留6位小数的大于0的数字\",\r\n          });\r\n        }\r\n        if (!/^\\+?[1-9][0-9]*$/.test(element.dayWithdrawalNum)) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"每日提现次数限制只能输入非零的正整数\",\r\n          });\r\n        }\r\n        if (!/^\\+?[1-9][0-9]*$/.test(element.freeNum)) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"系统免费提现次数只能输入非零的正整数\",\r\n          });\r\n        }\r\n        if (\r\n          !/^[1-9]\\d*(\\.\\d{1,6})?$|^0(\\.\\d{1,6})?$/.test(\r\n            element.withdrawalMax\r\n          ) ||\r\n          Number(element.withdrawalMax) === 0\r\n        ) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"最大限制请输入最多保留6位小数的大于0的数字\",\r\n          });\r\n        }\r\n        if (\r\n          !/^[1-9]\\d*(\\.\\d{1,6})?$|^0(\\.\\d{1,6})?$/.test(\r\n            element.withdrawalMix\r\n          ) ||\r\n          Number(element.withdrawalMix) === 0\r\n        ) {\r\n          return this.$message({\r\n            type: \"error\",\r\n            message: \"最小限制请输入最多保留6位小数的大于0的数字\",\r\n          });\r\n        }\r\n        flagNum = flagNum + 1;\r\n      });\r\n      const newListLength = new Set(\r\n        this.withdrawaChannelForm.channelList.map((item) => item.rechargeName)\r\n      ).size;\r\n      const listLength = this.withdrawaChannelForm.channelList.length;\r\n      if (listLength > newListLength) {\r\n        return this.$message({\r\n          type: \"error\",\r\n          message: \"请输入不同名称的展示名称\",\r\n        });\r\n      }\r\n      if (flagNum === this.withdrawaChannelForm.channelList.length) {\r\n        try {\r\n          saveSettingConfig(\r\n            \"WITHDRAWAL_CHANNEL_SETTING\",\r\n            JSON.stringify(this.withdrawaChannelForm.channelList)\r\n          ).then((res) => {\r\n            if (res.code === 200) {\r\n              this.$message({\r\n                message: \"保存成功\",\r\n                type: \"success\",\r\n              });\r\n            }\r\n          });\r\n        } catch (error) {}\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.handleClick();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n:deep(.el-input__inner) {\r\n  width: 400px !important;\r\n}\r\n</style>\r\n"]}]}