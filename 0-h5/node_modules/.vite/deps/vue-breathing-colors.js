import {
  __commonJS,
  __toESM
} from "./chunk-ZS7NZCD4.js";

// node_modules/vue-breathing-colors/dist/index.js
var require_dist = __commonJS({
  "node_modules/vue-breathing-colors/dist/index.js"(exports, module) {
    module.exports = /******/
    function(modules) {
      var installedModules = {};
      function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
          return installedModules[moduleId].exports;
        }
        var module2 = installedModules[moduleId] = {
          /******/
          i: moduleId,
          /******/
          l: false,
          /******/
          exports: {}
          /******/
        };
        modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
        module2.l = true;
        return module2.exports;
      }
      __webpack_require__.m = modules;
      __webpack_require__.c = installedModules;
      __webpack_require__.d = function(exports2, name, getter) {
        if (!__webpack_require__.o(exports2, name)) {
          Object.defineProperty(exports2, name, {
            /******/
            configurable: false,
            /******/
            enumerable: true,
            /******/
            get: getter
            /******/
          });
        }
      };
      __webpack_require__.n = function(module2) {
        var getter = module2 && module2.__esModule ? (
          /******/
          function getDefault() {
            return module2["default"];
          }
        ) : (
          /******/
          function getModuleExports() {
            return module2;
          }
        );
        __webpack_require__.d(getter, "a", getter);
        return getter;
      };
      __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      __webpack_require__.p = "";
      return __webpack_require__(__webpack_require__.s = 0);
    }([
      /* 0 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var _breathingColors = __webpack_require__(1);
        var _breathingColors2 = _interopRequireDefault(_breathingColors);
        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }
        var BreathingColors2 = {
          install: function install(Vue, options) {
            (0, _breathingColors2.default)(Vue);
          }
        };
        exports2.default = BreathingColors2;
      },
      /* 1 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
          return typeof obj;
        } : function(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
        var validate = function validate2(colors, interval, transition) {
          if (!colors) {
            console.warn("Breathing Colors Warn: Colors is " + colors + ". Array of colors is required.");
            return;
          }
          if (!interval) {
            console.warn("Breathing Colors Warn: Interval is " + colors + ". Animation interval is required.");
            return;
          }
          if (typeof interval !== "number") {
            console.warn("Breathing Colors Warn: Interval expects a number got - " + (typeof interval === "undefined" ? "undefined" : _typeof(interval)) + ".");
            return;
          }
          if (!transition) {
            console.warn("Breathing Colors Warn: Transition object is " + interval + ". Transition object required,.");
            return;
          }
          if (!transition.duration) {
            console.warn("Breathing Colors Warn: Transition duration is " + transition.duration + ". Transition duration is required.");
            return;
          }
          if (typeof transition.duration !== "number") {
            console.warn("Breathing Colors Warn: Transition duration expects a number got - " + _typeof(transition.duration) + ".");
            return;
          }
        };
        exports2.default = function(Vue) {
          Vue.directive("breathing-colors", {
            inserted: function inserted(el) {
              console.log(el);
            },
            bind: function bind(el, binding, vnode) {
              var name = binding.name, value = binding.value, oldValue = binding.oldValue, expression = binding.expression, arg = binding.arg, modifiers = binding.modifiers;
              var colors = value.colors, interval = value.interval, transition = value.transition;
              var hover = modifiers.hover, random = modifiers.random;
              validate(colors, interval, transition);
              var count = colors.length;
              colors = new Array(colors)[0].reverse();
              transition = "background-color " + (transition.duration || 1e3) + "ms linear " + (transition.delay ? transition.delay + "ms" : "");
              el.style.backgroundColor = colors[colors.length - 1];
              el.style["-webkit-transition"] = transition;
              el.style["-moz-transition"] = transition;
              el.style["-o-transition"] = transition;
              el.style.transition = transition;
              var animate = function animate2() {
                if (random) {
                  var num = Math.round(Math.random() * colors.length);
                  el.style.backgroundColor = colors[num];
                } else {
                  el.style.backgroundColor = colors[--count];
                  if (count === 0) {
                    count = colors.length;
                  }
                }
              };
              if (hover) {
                el.onmouseover = function() {
                  animate();
                };
              } else {
                setInterval(function() {
                  animate();
                }, interval);
              }
            }
          });
        };
      }
      /******/
    ]);
  }
});

// node_modules/vue-breathing-colors/index.js
var import_dist = __toESM(require_dist());
var vue_breathing_colors_default = import_dist.default;
export {
  vue_breathing_colors_default as default
};
//# sourceMappingURL=vue-breathing-colors.js.map
