{
  "version": 3,
  "sources": ["../../pubsub-js/src/pubsub.js"],
  "sourcesContent": ["/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory){\n    'use strict';\n\n    var PubSub = {};\n\n    if (root.PubSub) {\n        PubSub = root.PubSub;\n        console.warn(\"PubSub already loaded, using existing version\");\n    } else {\n        root.PubSub = PubSub;\n        factory(PubSub);\n    }\n    // CommonJS and Node.js module support\n    if (typeof exports === 'object'){\n        if (module !== undefined && module.exports) {\n            exports = module.exports = PubSub; // Node.js specific `module.exports`\n        }\n        exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n        module.exports = exports = PubSub; // CommonJS\n    }\n    // AMD support\n    /* eslint-disable no-undef */\n    else if (typeof define === 'function' && define.amd){\n        define(function() { return PubSub; });\n        /* eslint-enable no-undef */\n    }\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n    'use strict';\n\n    var messages = {},\n        lastUid = -1,\n        ALL_SUBSCRIBING_MSG = '*';\n\n    function hasKeys(obj){\n        var key;\n\n        for (key in obj){\n            if ( Object.prototype.hasOwnProperty.call(obj, key) ){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a function that throws the passed exception, for use as argument for setTimeout\n     * @alias throwException\n     * @function\n     * @param { Object } ex An Error object\n     */\n    function throwException( ex ){\n        return function reThrowException(){\n            throw ex;\n        };\n    }\n\n    function callSubscriberWithDelayedExceptions( subscriber, message, data ){\n        try {\n            subscriber( message, data );\n        } catch( ex ){\n            setTimeout( throwException( ex ), 0);\n        }\n    }\n\n    function callSubscriberWithImmediateExceptions( subscriber, message, data ){\n        subscriber( message, data );\n    }\n\n    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n        var subscribers = messages[matchedMessage],\n            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n            s;\n\n        if ( !Object.prototype.hasOwnProperty.call( messages, matchedMessage ) ) {\n            return;\n        }\n\n        for (s in subscribers){\n            if ( Object.prototype.hasOwnProperty.call(subscribers, s)){\n                callSubscriber( subscribers[s], originalMessage, data );\n            }\n        }\n    }\n\n    function createDeliveryFunction( message, data, immediateExceptions ){\n        return function deliverNamespaced(){\n            var topic = String( message ),\n                position = topic.lastIndexOf( '.' );\n\n            // deliver the message as it is now\n            deliverMessage(message, message, data, immediateExceptions);\n\n            // trim the hierarchy and deliver message to each level\n            while( position !== -1 ){\n                topic = topic.substr( 0, position );\n                position = topic.lastIndexOf('.');\n                deliverMessage( message, topic, data, immediateExceptions );\n            }\n\n            deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n        };\n    }\n\n    function hasDirectSubscribersFor( message ) {\n        var topic = String( message ),\n            found = Boolean(Object.prototype.hasOwnProperty.call( messages, topic ) && hasKeys(messages[topic]));\n\n        return found;\n    }\n\n    function messageHasSubscribers( message ){\n        var topic = String( message ),\n            found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n            position = topic.lastIndexOf( '.' );\n\n        while ( !found && position !== -1 ){\n            topic = topic.substr( 0, position );\n            position = topic.lastIndexOf( '.' );\n            found = hasDirectSubscribersFor(topic);\n        }\n\n        return found;\n    }\n\n    function publish( message, data, sync, immediateExceptions ){\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        var deliver = createDeliveryFunction( message, data, immediateExceptions ),\n            hasSubscribers = messageHasSubscribers( message );\n\n        if ( !hasSubscribers ){\n            return false;\n        }\n\n        if ( sync === true ){\n            deliver();\n        } else {\n            setTimeout( deliver, 0 );\n        }\n        return true;\n    }\n\n    /**\n     * Publishes the message, passing the data to it's subscribers\n     * @function\n     * @alias publish\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publish = function( message, data ){\n        return publish( message, data, false, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Publishes the message synchronously, passing the data to it's subscribers\n     * @function\n     * @alias publishSync\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publishSync = function( message, data ){\n        return publish( message, data, true, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n     * @function\n     * @alias subscribe\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { String }\n     */\n    PubSub.subscribe = function( message, func ){\n        if ( typeof func !== 'function'){\n            return false;\n        }\n\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        // message is not registered yet\n        if ( !Object.prototype.hasOwnProperty.call( messages, message ) ){\n            messages[message] = {};\n        }\n\n        // forcing token as String, to allow for future expansions without breaking usage\n        // and allow for easy use as key names for the 'messages' object\n        var token = 'uid_' + String(++lastUid);\n        messages[message][token] = func;\n\n        // return token for unsubscribing\n        return token;\n    };\n\n    PubSub.subscribeAll = function( func ){\n        return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n    };\n\n    /**\n     * Subscribes the passed function to the passed message once\n     * @function\n     * @alias subscribeOnce\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { PubSub }\n     */\n    PubSub.subscribeOnce = function( message, func ){\n        var token = PubSub.subscribe( message, function(){\n            // before func apply, unsubscribe message\n            PubSub.unsubscribe( token );\n            func.apply( this, arguments );\n        });\n        return PubSub;\n    };\n\n    /**\n     * Clears all subscriptions\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     */\n    PubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n        messages = {};\n    };\n\n    /**\n     * Clear subscriptions by the topic\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     * @return { int }\n     */\n    PubSub.clearSubscriptions = function clearSubscriptions(topic){\n        var m;\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                delete messages[m];\n            }\n        }\n    };\n\n    /**\n       Count subscriptions by the topic\n     * @function\n     * @public\n     * @alias countSubscriptions\n     * @return { Array }\n    */\n    PubSub.countSubscriptions = function countSubscriptions(topic){\n        var m;\n        // eslint-disable-next-line no-unused-vars\n        var token;\n        var count = 0;\n        for (m in messages) {\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n                for (token in messages[m]) {\n                    count++;\n                }\n                break;\n            }\n        }\n        return count;\n    };\n\n\n    /**\n       Gets subscriptions by the topic\n     * @function\n     * @public\n     * @alias getSubscriptions\n    */\n    PubSub.getSubscriptions = function getSubscriptions(topic){\n        var m;\n        var list = [];\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                list.push(m);\n            }\n        }\n        return list;\n    };\n\n    /**\n     * Removes subscriptions\n     *\n     * - When passed a token, removes a specific subscription.\n     *\n\t * - When passed a function, removes all subscriptions for that function\n     *\n\t * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n     * @function\n     * @public\n     * @alias subscribeOnce\n     * @param { String | Function } value A token, function or topic to unsubscribe from\n     * @example // Unsubscribing with a token\n     * var token = PubSub.subscribe('mytopic', myFunc);\n     * PubSub.unsubscribe(token);\n     * @example // Unsubscribing with a function\n     * PubSub.unsubscribe(myFunc);\n     * @example // Unsubscribing from a topic\n     * PubSub.unsubscribe('mytopic');\n     */\n    PubSub.unsubscribe = function(value){\n        var descendantTopicExists = function(topic) {\n                var m;\n                for ( m in messages ){\n                    if ( Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0 ){\n                        // a descendant of the topic exists:\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            isTopic    = typeof value === 'string' && ( Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value) ),\n            isToken    = !isTopic && typeof value === 'string',\n            isFunction = typeof value === 'function',\n            result = false,\n            m, message, t;\n\n        if (isTopic){\n            PubSub.clearSubscriptions(value);\n            return;\n        }\n\n        for ( m in messages ){\n            if ( Object.prototype.hasOwnProperty.call( messages, m ) ){\n                message = messages[m];\n\n                if ( isToken && message[value] ){\n                    delete message[value];\n                    result = value;\n                    // tokens are unique, so we can just stop here\n                    break;\n                }\n\n                if (isFunction) {\n                    for ( t in message ){\n                        if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value){\n                            delete message[t];\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}));\n"],
  "mappings": "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",
  "names": ["m"]
}
